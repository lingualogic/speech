/**
 * Speech-Service Bundle
 *
 * Version: 0.6.1
 * Build:   0002
 * TYPE:    alpha
 * Datum:   08.01.2022
 *
 * Autor:   LinguaLogic Team
 * Lizenz:  MIT
 *
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

!function(e,t){'object'==typeof exports&&'undefined'!=typeof module?t(exports,require('@speech/core')):'function'==typeof define&&define.amd?define(['exports','@speech/core'],t):t((e='undefined'!=typeof globalThis?globalThis:e||self).speechService={},e.speechCore)}(this,(function(e,t){'use strict';class i{constructor(e,t){this.mEventEmitter=e,this.mIndex=t}unsubscribe(){this.mEventEmitter&&this.mEventEmitter.unsubscribe(this.mIndex),this.mEventEmitter=null,this.mIndex=-1}}class r{constructor(e=!1){this.mAsyncFlag=!1,this.mFunctionList=[],this.mAsyncFlag=e}_callEventFunction(e,t){if('function'!=typeof e)return console.log('EventEmitter._callEventFunction: Keine Event-Funktion uebergeben'),-1;try{return e(t),0}catch(e){return console.log('EventEmitter._callEventFunction: Exception ',e.message),-1}}emit(e){for(const t of this.mFunctionList)t&&(this.mAsyncFlag?setTimeout((()=>this._callEventFunction(t,e)),0):this._callEventFunction(t,e))}subscribe(e){if(e&&'function'==typeof e){let t=-1;for(let i=0;i<this.mFunctionList.length;i++)if(null===this.mFunctionList[i]){t=i,this.mFunctionList[t]=e;break}return-1===t&&(t=this.mFunctionList.push(e)-1),new i(this,t)}return null}unsubscribe(e){e>-1&&e<this.mFunctionList.length&&(e+1===this.mFunctionList.length?this.mFunctionList.pop():this.mFunctionList[e]=null)}clear(){this.mFunctionList=[]}}const n=!1,o='ActionService',s='BotService',a='IntentService',c='ListenService',m='SpeakService',u=t.SPEECH_VERSION_NUMBER,l=t.SPEECH_VERSION_BUILD,E=t.SPEECH_VERSION_TYPE,g=u+'.'+l+' vom '+t.SPEECH_VERSION_DATE+' ('+E+')';class h{constructor(){}static clear(){return h.mServiceList.clear()}static _setSpeakConfig(e,t){try{const i=t.getConfig();return'boolean'==typeof e.activeFlag&&(i.activeFlag=e.activeFlag),'string'==typeof e.speakLanguage&&(i.speakLanguage=e.speakLanguage),'string'==typeof e.audioFormat&&(i.audioFormat=e.audioFormat),'string'==typeof e.audioFilePath&&(i.audioFilePath=e.audioFilePath),'boolean'==typeof e.audioFlag&&(i.audioFlag=e.audioFlag),'boolean'==typeof e.errorOutputFlag&&(i.errorOutputFlag=e.errorOutputFlag),0}catch(e){return-1}}static _setListenConfig(e,t){try{const i=t.getConfig();return'boolean'==typeof e.activeFlag&&(i.activeFlag=e.activeFlag),'string'==typeof e.listenLanguage&&(i.listenLanguage=e.listenLanguage),e.asrList&&(i.asrList=e.asrList),'string'==typeof e.asrDefault&&(i.asrDefault=e.asrDefault),'boolean'==typeof e.errorOutputFlag&&(i.errorOutputFlag=e.errorOutputFlag),0}catch(e){return-1}}static _setIntentConfig(e,t){try{const i=t.getConfig();return'boolean'==typeof e.activeFlag&&(i.activeFlag=e.activeFlag),'string'==typeof e.intentLanguage&&(i.intentLanguage=e.intentLanguage),'boolean'==typeof e.errorOutputFlag&&(i.errorOutputFlag=e.errorOutputFlag),0}catch(e){return-1}}static _setActionConfig(e,t){try{const i=t.getConfig();return'boolean'==typeof e.activeFlag&&(i.activeFlag=e.activeFlag),'boolean'==typeof e.errorOutputFlag&&(i.errorOutputFlag=e.errorOutputFlag),0}catch(e){return-1}}static _setBotConfig(e,t){try{const i=t.getConfig();return'boolean'==typeof e.activeFlag&&(i.activeFlag=e.activeFlag),'boolean'==typeof e.speakFlag&&(i.speakFlag=e.speakFlag),'boolean'==typeof e.actionFlag&&(i.actionFlag=e.actionFlag),'string'==typeof e.dialogName&&(i.dialogName=e.dialogName),'string'==typeof e.dialogRootState&&(i.dialogRootState=e.dialogRootState),'boolean'==typeof e.dialogLoadFlag&&(i.dialogLoadFlag=e.dialogLoadFlag),'string'==typeof e.dialogFilePath&&(i.dialogFilePath=e.dialogFilePath),'string'==typeof e.dialogFileName&&(i.dialogFileName=e.dialogFileName),'boolean'==typeof e.errorOutputFlag&&(i.errorOutputFlag=e.errorOutputFlag),0}catch(e){return-1}}static _setConfig(e,t,i){try{switch(e){case m:h._setSpeakConfig(t,i);break;case c:h._setListenConfig(t,i);break;case a:h._setIntentConfig(t,i);break;case o:h._setActionConfig(t,i);break;case s:h._setBotConfig(t,i)}}catch(e){console.log('ServiceManager._add: Exception ',e)}}static get(e,t,i={}){if(!e)return console.log('ServiceManager.get: kein Servicename uebergeben'),null;let r=h.mServiceList.find(e);if(r)return r;if(!t)return console.log('ServiceManager.get: keine Serviceklasse uebergeben'),null;try{h._setConfig(e,i,t),r=new t}catch(e){return console.log('ServiceManager.get: Exception ',e),null}return e!==r.getName()?(console.log('ServiceManager.get: Servicenamen stimmen nicht ueberein '+e+' != '+r.getName()),null):r}static find(e){return e?h.mServiceList.find(e):(console.log('ServiceManager.get: kein Servicename uebergeben'),null)}static insert(e){return e?h.mServiceList.find(e.getName())?-1:h.mServiceList.insert(e.getName(),e):(console.log('ServiceManager.insert: kein Service uebergeben'),-1)}}h.mServiceList=new class{constructor(){this.mServiceList=new Map,this.mServiceIterator=this.mServiceList.values()}getSize(){return this.mServiceList.size}insert(e,t){try{return e?t?this.mServiceList.has(e)?(console.log('ServiceList.insert: Service existiert bereits '+e),-1):(this.mServiceList.set(e,t),0):(console.log('ServiceList.insert: kein Service uebergeben'),-1):(console.log('ServiceList.insert: kein Servicename uebergeben'),-1)}catch(e){return console.log('ServiceList.insert: Exception ',e),-1}}find(e){try{return this.mServiceList.get(e)}catch(e){return void console.log('ServiceList.find: Exception ',e)}}first(){try{return this.mServiceIterator=this.mServiceList.values(),this.mServiceIterator.next().value}catch(e){return void console.log('ServiceList.first: Exception ',e)}}next(){try{return this.mServiceIterator.next().value}catch(e){return void console.log('ServiceList.next: Exception ',e)}}getNameList(){return Array.from(this.mServiceList.keys())}remove(e){try{return this.mServiceList.delete(e),0}catch(e){return console.log('ServiceList.remove: Exception ',e),-1}}clear(){try{return this.mServiceList.clear(),0}catch(e){return console.log('ServiceList.clear: Exception ',e),-1}}};e.EventEmitter=r,e.SERVICE_ACTION_NAME=o,e.SERVICE_AGENT_NAME='AgentService',e.SERVICE_AMAZON_NAME='AmazonService',e.SERVICE_API_VERSION="1.0",e.SERVICE_ASYNC_EVENT=n,e.SERVICE_BOT_NAME=s,e.SERVICE_COMPONENT_NAME='ServiceComponent',e.SERVICE_DIALOG_NAME='DialogService',e.SERVICE_ERROR_OUTPUT=false,e.SERVICE_GOOGLE_NAME='GoogleService',e.SERVICE_INTENT_NAME=a,e.SERVICE_LISTEN_NAME=c,e.SERVICE_MICROSOFT_NAME='MicrosoftService',e.SERVICE_RASA_NAME='RasaService',e.SERVICE_SERVICEMOCK_NAME='ServiceMock',e.SERVICE_SERVICE_NAME='Service',e.SERVICE_SPEAK_NAME=m,e.SERVICE_TYPE_NAME='Service',e.SERVICE_VERSION_STRING=g,e.SPEECH_ACTION_SERVICE='ActionService',e.SPEECH_AGENT_SERVICE='AgentService',e.SPEECH_AMAZON_SERVICE='AmazonService',e.SPEECH_BOT_SERVICE='BotService',e.SPEECH_DIALOG_SERVICE='DialogService',e.SPEECH_GOOGLE_SERVICE='GoogleService',e.SPEECH_INTENT_SERVICE='IntentService',e.SPEECH_LISTEN_SERVICE='ListenService',e.SPEECH_MICROSOFT_SERVICE='MicrosoftService',e.SPEECH_RASA_SERVICE='RasaService',e.SPEECH_SPEAK_SERVICE='SpeakService',e.Service=class{constructor(e,t,i){this.mComponent=null,this.mComponentName='',this.mServiceName='Service',this.mServiceVersion=g,this.mServiceApiVersion="1.0",this.mInitEvent=new r(n),this.mStartEvent=new r(n),this.mStopEvent=new r(n),this.mErrorEvent=new r(n),this.mErrorOutputFlag=false,this.mComponentName=e,this.mServiceName=t,this.mServiceVersion=i}getComponentName(){return this.mComponentName}getName(){return this.mServiceName}getVersion(){return this.mServiceVersion}getApiVersion(){return this.mServiceApiVersion}_setOption(e){return e?('boolean'==typeof e.activeFlag&&(this.active=e.activeFlag),'boolean'==typeof e.errorOutputFlag&&(this.errorOutput=e.errorOutputFlag),0):-1}_createComponent(e,t){return null}init(e){return this.mComponent?(this._setOption(e),0):(this.mComponent=this._createComponent(this.getComponentName(),e),this.mComponent?(this._setOption(e),this.mErrorOutputFlag&&console.log(this.getName()+' Version:',this.getVersion()),this._addAllEvent(this.getName())):(this._error('init','Komponente nicht erzeugt'),-1))}reset(e){if(!this.mComponent)return this._error('reset','keine Komponente vorhanden'),-1;const t=this.mComponent.reset(e);return this._setOption(e),t}isInit(){return!!this.mComponent}isActive(){return!!this.mComponent&&this.mComponent.isActive()}setActiveOn(){return this.mComponent?this.mComponent.setActiveOn():-1}setActiveOff(){return this.mComponent?this.mComponent.setActiveOff():-1}set active(e){e?this.setActiveOn():this.setActiveOff()}get active(){return this.isActive()}isErrorOutput(){return this.mComponent?this.mComponent.isErrorOutput():this.mErrorOutputFlag}setErrorOutputOn(){this.mErrorOutputFlag=!0,this.mComponent&&this.mComponent.setErrorOutputOn()}setErrorOutputOff(){this.mErrorOutputFlag=!1,this.mComponent&&this.mComponent.setErrorOutputOff()}set errorOutput(e){e?this.setErrorOutputOn():this.setErrorOutputOff()}get errorOutput(){return this.isErrorOutput()}_error(e,t){this.mErrorOutputFlag&&console.log('===> ERROR '+this.getName()+'.'+e+':',t),this.mErrorEvent.emit(new Error(this.getName()+'.'+e+': '+t))}_exception(e,t){this.mErrorOutputFlag&&console.log('===> EXCEPTION '+this.getName()+'.'+e+':',t.message),this.mErrorEvent.emit(new Error('EXCEPTION '+this.getName()+'.'+e+': '+t.message))}_addAllEvent(e){return this.mComponent?(this.mComponent.removeAllEvent(e),this.mComponent.addInitEvent(e,(()=>(this.mInitEvent.emit(),0))),this.mComponent.addStartEvent(e,(()=>(this.mStartEvent.emit(),0))),this.mComponent.addStopEvent(e,(()=>(this.mStopEvent.emit(),0))),this.mComponent.addErrorEvent(e,(e=>(this.mErrorEvent.emit(e),0))),0):(this._error('_addAllEvent','keine Komponente vorhanden'),-1)}get initEvent(){return this.mInitEvent}get startEvent(){return this.mStartEvent}get stopEvent(){return this.mStopEvent}get errorEvent(){return this.mErrorEvent}isRunning(){return!!this.mComponent&&this.mComponent.isRunning()}start(){return this.mComponent?this.mComponent.start():(this._error('start','keine Komponente vorhanden'),-1)}stop(){return this.mComponent?this.mComponent.stop():(this._error('stop','keine Komponente vorhanden'),-1)}test(e,t){return this.mComponent?this.mComponent.test(e,t):(this._error('test','keine Komponente vorhanden'),{result:-1})}},e.ServiceLock=class{constructor(){this.mLockServiceName='',this.mLockEvent=new r,this.mUnlockEvent=new r}get lockEvent(){return this.mLockEvent}get unlockEvent(){return this.mUnlockEvent}isLock(){return!!this.mLockServiceName}getLockServiceName(){return this.mLockServiceName}lock(e){return!this.mLockServiceName&&(this.mLockServiceName=e,this.mLockEvent.emit(e),!0)}unlock(e){return this.mLockServiceName===e&&(this.mLockServiceName='',this.mUnlockEvent.emit(e),!0)}forceLock(e){this.mLockServiceName&&this.forceUnlock(),this.lock(e)}forceUnlock(){if(this.mLockServiceName){const e=this.mLockServiceName;this.mLockServiceName='',this.unlockEvent.emit(e)}}},e.ServiceManager=h,Object.defineProperty(e,'__esModule',{value:!0})}));
