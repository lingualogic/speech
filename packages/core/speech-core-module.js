/**
 * Speech-Core Bundle
 *
 * Version: 0.6.1
 * Build:   0002
 * TYPE:    alpha
 * Datum:   08.01.2022
 *
 * Autor:   LinguaLogic Team
 * Lizenz:  MIT
 *
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

const t='SpeechApi',e='SpeechApiMock',r=!1,n=!0,s='',i='mp3',o='wav',u="mp3",a='speech/',c='speech.def',m='',l='speechworker.js',h='web',p='cordova',g='WebSocket',E='WebWorker',d='PETRA',O='ANNA',v='YANNICK',f='MARKUS',L='Hanna',P="Hanna";class F{constructor(t){this.mErrorClassName='ErrorBase',this.mErrorOutputFlag=false,this.mErrorOutputFunc=null,this.mErrorClassName=t}_setErrorClassName(t){this.mErrorClassName=t}_getErrorClassName(){return this.mErrorClassName}setErrorOutput(t){this.mErrorOutputFlag=t}setErrorOutputDefault(){this.setErrorOutput(false)}setErrorOutputFunc(t){this.mErrorOutputFunc=t}error(t,e){if(this.mErrorOutputFlag&&console.log('===> ERROR ',this.mErrorClassName+'.'+t+':',e),'function'==typeof this.mErrorOutputFunc)try{this.mErrorOutputFunc(this.mErrorClassName+'.'+t+': '+e)}catch(t){console.log('ErrorBase.error: Exception ',t.message)}}exception(t,e){if(this.mErrorOutputFlag&&console.log('===> EXCEPTION ',this.mErrorClassName+'.'+t+':',e.message),'function'==typeof this.mErrorOutputFunc)try{this.mErrorOutputFunc('EXCEPTION '+this.mErrorClassName+'.'+t+': '+e.message)}catch(t){console.log('ErrorBase.exception: Exception ',t.message)}}isErrorOutput(){return this.mErrorOutputFlag}setErrorOutputOn(){this.setErrorOutput(!0)}setErrorOutputOff(){this.setErrorOutput(!1)}}class y{constructor(){}static setErrorOutputOn(){y.mBuilderList.setErrorOutputOn(),y.mErrorBase.setErrorOutputOn()}static setErrorOutputOff(){y.mBuilderList.setErrorOutputOff(),y.mErrorBase.setErrorOutputOff()}static setErrorOutputFunc(t){y.mBuilderList.setErrorOutputFunc(t),y.mErrorBase.setErrorOutputFunc(t)}static getSize(){return y.mBuilderList.getSize()}static get(t,e){if(!t)return y.mErrorBase.error('get','kein Buildername uebergeben'),null;let r=y.find(t);if(r)return r;if(!e)return y.mErrorBase.error('get','keine Builderklasse uebergeben'),null;try{r=new e(t)}catch(t){return y.mErrorBase.exception('get',t),null}return t!==r.getName()?(y.mErrorBase.error('get','Buildernamen stimmen nicht ueberein '+t+' != '+r.getName()),y.remove(r.getName()),null):r}static find(t){const e=y.mBuilderList.find(t);return e||null}static insert(t,e){return y.mBuilderList.insert(t,e)}static remove(t){return y.mBuilderList.remove(t)}static clear(){return y.mBuilderList.clear()}}y.mBuilderList=new class extends F{constructor(){super('BuilderList'),this.mBuilderList=new Map,this.mBuilderIterator=this.mBuilderList.values()}getSize(){return this.mBuilderList.size}insert(t,e){try{return t?e?this.mBuilderList.has(t)?(this.error('insert','Builder existiert bereits'),-1):(this.mBuilderList.set(t,e),0):(this.error('insert','kein Builder uebergeben'),-1):(this.error('insert','kein Buildername uebergeben'),-1)}catch(t){return this.exception('insert',t),-1}}find(t){try{return this.mBuilderList.get(t)}catch(t){return void this.exception('find',t)}}first(){try{return this.mBuilderIterator=this.mBuilderList.values(),this.mBuilderIterator.next().value}catch(t){return void this.exception('first',t)}}next(){try{return this.mBuilderIterator.next().value}catch(t){return void this.exception('next',t)}}remove(t){try{return this.mBuilderList.delete(t),0}catch(t){return this.exception('remove',t),-1}}clear(){try{return this.mBuilderList.clear(),0}catch(t){return this.exception('clear',t),-1}}},y.mErrorBase=new F('BuilderManager');class N{constructor(){}static setErrorOutputOn(){N.mFactoryList.setErrorOutputOn(),N.mErrorBase.setErrorOutputOn()}static setErrorOutputOff(){N.mFactoryList.setErrorOutputOff(),N.mErrorBase.setErrorOutputOff()}static setErrorOutputFunc(t){N.mFactoryList.setErrorOutputFunc(t),N.mErrorBase.setErrorOutputFunc(t)}static getSize(){return N.mFactoryList.getSize()}static get(t,e){if(!t)return this.mErrorBase.error('get','kein FactoryName uebergeben'),null;let r=N.find(t);if(r)return r;if(!e)return this.mErrorBase.error('get','keine Factoryklasse uebergeben'),null;try{r=new e}catch(t){return this.mErrorBase.exception('get',t),null}return t!==r.getName()?(this.mErrorBase.error('get','FactoryName stimmen nicht ueberein '+t+' != '+r.getName()),N.remove(r.getName()),null):r}static find(t){const e=N.mFactoryList.find(t);return e||null}static insert(t,e){return N.mFactoryList.insert(t,e)}static remove(t){return N.mFactoryList.remove(t)}static clear(){return N.mFactoryList.clear()}}N.mFactoryList=new class extends F{constructor(){super('FactoryList'),this.mFactoryList=new Map,this.mFactoryIterator=null,this.mFactoryIterator=this.mFactoryList.values()}getSize(){return this.mFactoryList.size}insert(t,e){try{return t?e?this.mFactoryList.has(t)?(this.error('insert','Factory existiert bereits'),-1):(this.mFactoryList.set(t,e),0):(this.error('insert','keine Factory uebergeben'),-1):(this.error('insert','kein Factoryname uebergeben'),-1)}catch(t){return this.exception('insert',t),-1}}find(t){try{return this.mFactoryList.get(t)}catch(t){return void this.exception('find',t)}}first(){try{return this.mFactoryIterator=this.mFactoryList.values(),this.mFactoryIterator.next().value}catch(t){return void this.exception('first',t)}}next(){try{return this.mFactoryIterator.next().value}catch(t){return void this.exception('next',t)}}remove(t){try{return this.mFactoryList.delete(t),0}catch(t){return this.exception('remove',t),-1}}clear(){try{return this.mFactoryList.clear(),0}catch(t){return this.exception('clear',t),-1}}},N.mErrorBase=new F('FactoryManager');class S extends F{constructor(){super('PluginList'),this.mPluginList=new Map,this.mPluginIterator=this.mPluginList.values()}getSize(){return this.mPluginList.size}getNameList(){return Array.from(this.mPluginList.keys())}insert(t,e){try{return t?e?this.mPluginList.has(t)?(this.error('insert','Plugin existiert bereits '+t),-1):(this.mPluginList.set(t,e),0):(this.error('insert','kein Plugin uebergeben'),-1):(this.error('insert','kein Pluginname uebergeben'),-1)}catch(t){return this.exception('insert',t),-1}}find(t){try{return this.mPluginList.get(t)}catch(t){return void this.exception('find',t)}}first(){try{return this.mPluginIterator=this.mPluginList.values(),this.mPluginIterator.next().value}catch(t){return void this.exception('first',t)}}next(){try{return this.mPluginIterator.next().value}catch(t){return void this.exception('next',t)}}remove(t){try{return this.mPluginList.delete(t),0}catch(t){return this.exception('remove',t),-1}}clear(){try{return this.mPluginList.clear(),0}catch(t){return this.exception('clear',t),-1}}}class C{constructor(){}static setErrorOutputOn(){C.mPluginList.setErrorOutputOn(),C.mErrorBase.setErrorOutputOn()}static setErrorOutputOff(){C.mPluginList.setErrorOutputOff(),C.mErrorBase.setErrorOutputOff()}static setErrorOutputFunc(t){C.mPluginList.setErrorOutputFunc(t),C.mErrorBase.setErrorOutputFunc(t)}static getSize(){return C.mPluginList.getSize()}static getNameList(){return C.mPluginList.getNameList()}static get(t,e,r){if(!t)return C.mErrorBase.error('get','kein PluginName uebergeben'),null;const n=C.find(t);return n||(r?r.create(t,e):(C.mErrorBase.error('get','keine PluginFactoryClass uebergeben'),null))}static find(t){const e=C.mPluginList.find(t);return e||null}static insert(t,e){return C.mPluginList.insert(t,e)}static remove(t){return C.mPluginList.remove(t)}static clear(){let t=C.mPluginList.first();for(;t;){try{t.done()}catch(t){C.mErrorBase.exception('clear',t)}t=C.mPluginList.next()}return C.mPluginList.clear()}}C.mPluginList=new S,C.mErrorBase=new F('PluginManager');class x extends F{constructor(t,e=!0){if(super('Builder'),this.mBuilderName='Builder',this._setErrorClassName(this.getClass()),e&&0!==y.insert(t||this.getName(),this))throw new Error('Builder '+this.getName()+' existiert bereits im BuilderManager');t&&(this.mBuilderName=t)}getType(){return''}getClass(){return'Builder'}getName(){return this.mBuilderName}build(t){return null}_getComponentName(t){return t&&'string'==typeof t.componentName?t.componentName:''}_getComponentClass(t){return t&&'string'==typeof t.componentClass?t.componentClass:''}_getRegisterFlag(t){return!(!t||!t.componentRegisterFlag)&&t.componentRegisterFlag}_getBuilder(t,e){return y.get(t,e)}_getFactory(t,e){return N.get(t,e)}_findComponent(t){return t?C.find(t):null}_getComponent(t,e,r){if(e){const n=this._getBuilder(e,r);if(n)return n.build(t)}const n=this._getComponentName(t),s=this._getComponentClass(t);return C.get(n,s)}_getPlugin(t,e,r,n){if(r&&n){const s=this._getFactory(r,n);if(s)return C.get(t,e,s)}return C.get(t,e)}_findPlugin(t){return C.find(t)}}let I="DE";const _={0:'kein Fehler',1:'undefinierter Fehler',2:'kein setDialog',3:'kein startDialog',4:'kein stopDialog',5:'kein loadDialogFile',6:'kein writeDialogData',7:'kein setting',8:'kein setState',9:'kein setStateContext',10:'kein skipNextSpeak',11:'Exception aufgetreten',12:'keine gueltige Nachricht'},B={0:'no Error',1:"undefine Error",2:'no setDialog',3:'no startDialog',4:'no stopDialog',5:'no loadDialogFile',6:'no writeDialogData',7:'no setting',8:'no setState',9:'no setStateContext',10:'no skipNextSpeak',11:'throw exception',12:'invalid message'};var R=Object.freeze({__proto__:null,SPEECH_ERROR_ENGLISH:"EN",SPEECH_ERROR_GERMAN:"DE",SPEECH_NO_ERROR:0,SPEECH_UNDEFINE_ERROR:1,SPEECH_NOSETDIALOG_ERROR:2,SPEECH_NOSTARTDIALOG_ERROR:3,SPEECH_NOSTOPDIALOG_ERROR:4,SPEECH_NOLOADDIALOGFILE_ERROR:5,SPEECH_NOWRITEDIALOGDATA_ERROR:6,SPEECH_NOSETTING_ERROR:7,SPEECH_NOSETSTATE_ERROR:8,SPEECH_NOSETSTATECONTEXT_ERROR:9,SPEECH_NOSKIPNEXTSPEAK_ERROR:10,SPEECH_EXCEPTION_ERROR:11,SPEECH_INVALIDMESSAGE_ERROR:12,SPEECH_UNDEFINE_ERRORTEXT:"undefine Error",setErrorLanguage:function(t){return I="EN"===t?"EN":"DE",I},getErrorText:function(t){const e=Math.abs(t);let r=_;return"EN"===I&&(r=B),r[e]||r[1]||"undefine Error"}});class b{static getBrowserName(){let t='';const e=navigator.userAgent;return'undefined'!=typeof InstallTrigger?t='Firefox':document.documentMode?t='IE':window.safari?t='Safari':window.chrome&&e.match(/OPR/)?t='Opera':window.chrome&&e.match(/Edge/)?t='Edge':window.chrome&&e.match(/Edg/)?t='Edge2':window.chrome&&!e.match(/(OPR|Edge|Edg)/)&&(t='Chrome'),t}}const k='ComponentMessage';class w{constructor(){}static setErrorOutputOn(){w.mComponentList.setErrorOutputOn(),w.mErrorBase.setErrorOutputOn()}static setErrorOutputOff(){w.mComponentList.setErrorOutputOff(),w.mErrorBase.setErrorOutputOff()}static setErrorOutputFunc(t){w.mComponentList.setErrorOutputFunc(t),w.mErrorBase.setErrorOutputFunc(t)}static getSize(){return w.mComponentList.getSize()}static getNameList(){return w.mComponentList.getNameList()}static getNameTypeList(t){return w.mComponentList.getNameTypeList(t)}static getTypeList(){return w.mComponentList.getTypeList()}static find(t){const e=w.mComponentList.find(t);return e||null}static insert(t,e){return w.mComponentList.insert(t,e)}static remove(t){return w.mComponentList.remove(t)}static clear(){let t=w.mComponentList.first();for(;t;){try{t.done()}catch(t){w.mErrorBase.exception('clear',t)}t=w.mComponentList.next()}return w.mComponentList.clear()}static sendMessage(t){if(t&&"ComponentMessage"===t.type)if(t.dest){const e=w.find(t.dest);if(e)return e.handleMessage(t),0;w.mErrorBase.error('sendMessage','Komponente nicht gefunden '+t.dest)}else w.mErrorBase.error('sendMessage','Komponentenname nicht uebergeben');else w.mErrorBase.error('sendMessage','keine Komponenten-Nachricht');return-1}static getSendMessageFunc(){return t=>w.sendMessage(t)}}w.mComponentList=new class extends F{constructor(){super('ComponentList'),this.mComponentList=new Map,this.mComponentIterator=this.mComponentList.values()}getSize(){return this.mComponentList.size}getNameList(){return Array.from(this.mComponentList.keys())}getNameTypeList(t){const e=[];let r=this.first();for(;r;)r.getType()===t&&e.push(r.getName()),r=this.next();return e}getTypeList(){const t=[];let e=this.first(),r=-1;for(;e;)r=t.findIndex((t=>t===e.getType())),-1===r&&t.push(e.getName()),e=this.next();return t}insert(t,e){try{return t?e?this.mComponentList.has(t)?(this.error('insert','Komponente existiert bereits '+t),-1):(this.mComponentList.set(t,e),0):(this.error('insert','keine Komponente uebergeben '+t),-1):(this.error('insert','kein Komponentenname uebergeben'),-1)}catch(t){return this.exception('insert',t),-1}}find(t){try{return this.mComponentList.get(t)}catch(t){return void this.exception('find',t)}}first(){try{return this.mComponentIterator=this.mComponentList.values(),this.mComponentIterator.next().value}catch(t){return void this.exception('first',t)}}next(){try{return this.mComponentIterator.next().value}catch(t){return void this.exception('next',t)}}remove(t){try{return this.mComponentList.delete(t),0}catch(t){return this.exception('remove',t),-1}}clear(){try{return this.mComponentList.clear(),0}catch(t){return this.exception('clear',t),-1}}},w.mErrorBase=new F('ComponentManager');const A='0.6.1',T='0002',M='alpha',D='08.01.2022',z="0.6.1.0002 vom 08.01.2022 (alpha)",H="0.6.1.0002 vom 08.01.2022 (alpha)",G="0.6.1.0002 vom 08.01.2022 (alpha)",K="0.6.1.0002 vom 08.01.2022 (alpha)",X='init',U='start',j='stop',W='event',V='error',J='featureInfo',Y='wakewordStart',q='wakewordStop',Q='wakewordDetect',Z='speak',$='speakStart',tt='speakStop',et='speakAudioUnlock',rt='listenStart',nt='listenStop',st='listenResult',it='listenInterimResult',ot='listenNoMatch',ut='listenIntent',at='listenRecognitionStart',ct='listenRecognitionStop',mt='listenAudioStart',lt='listenAudioStop',ht='listenSoundStart',pt='listenSoundStop',gt='listenSpeechStart',Et='listenSpeechStop',dt='intentStart',Ot='intentStop',vt='intentResult',ft='action',Lt='actionStart',Pt='actionStop',Ft='dialogSet',yt='dialogStart',Nt='dialogStop',St='dialogJson',Ct='dialogParse',xt='dialogStateSet',It='dialogAction',_t='dialogActionStop',Bt='dialogSpeak',Rt='dialogSpeakStart',bt='dialogSpeakStop',kt='inferenceSet',wt='inferenceStart',At='inferenceStop',Tt='inferenceParse',Mt='inferenceStateSet',Dt='inferenceAction',zt='inferenceActionStop',Ht='inferenceSpeak',Gt='inferenceSpeakStart',Kt='inferenceSpeakStop',Xt='agentStart',Ut='agentStop',jt='agentResult',Wt='promptStart',Vt='promptStop',Jt='promptResult';class Yt extends F{constructor(t,e,r=!1){super('EventFunctionList'),this.mEventName='Event',this.mComponentName='Component',this.mAsyncFlag=!1,this.mFunctionList=new Map,this.mEventName=t,this.mComponentName=e,this.mAsyncFlag=r}setComponentName(t){this.mComponentName=t}getComponentName(){return this.mComponentName}getName(){return this.mEventName}getSize(){return this.mFunctionList.size}addListener(t,e){return t?'function'!=typeof e?(this.error('addListener','keine Eventfunktion uebergeben '+t+','+this.getComponentName()+','+this.getName()),-1):this.mFunctionList.has(t)?(this.error('addListener','Eventfunktion bereits vorhanden '+t+','+this.getComponentName()+','+this.getName()),-1):(this.mFunctionList.set(t,e),0):(this.error('addListener','kein Listenername uebergeben '+this.getComponentName()+','+this.getName()),-1)}removeListener(t){return t?(this.mFunctionList.delete(t),0):(this.error('removeListener',"kein Listenername uebergeben,"+this.getComponentName()+','+this.getName()),-1)}dispatch(t){let e=0;return this.mFunctionList.forEach((r=>{if(this.mAsyncFlag)setTimeout((function(){try{r(t)}catch(t){console.log('EventFunction.dispatch: Exception',t)}}),0);else try{0!==r(t)&&(e=-1)}catch(t){this.exception('dispatch',t),e=-1}})),e}dispatchListener(t,e){if(!t)return this.error('dispatchListener','kein Listenername uebergeben '+this.getComponentName()+','+this.getName()),-1;let r=0;const n=this.mFunctionList.get(t);if(n)if(this.mAsyncFlag)setTimeout((function(){try{n(e)}catch(t){console.log('EventFunction.dispatchListener: Exception',t)}}),0);else try{r=n(e)}catch(t){this.exception('dispatchListener',t),r=-1}return r}clear(){this.mFunctionList.clear()}}class qt extends F{constructor(t,e=!0){if(super('Plugin'),this.mPluginName='',this.mOnInitFunc=null,this.mOnErrorFunc=null,this.mInitFlag=!1,this.mActiveFlag=!1,this._setErrorClassName(this.getClass()),this.mPluginName=t,e&&0!==C.insert(t,this))throw new Error('Plugin '+this.getName()+' ist bereits im PluginManager vorhanden');this.setErrorOutputFunc(this._getErrorOutputFunc())}isMock(){return!1}getType(){return'Plugin'}getClass(){return'Plugin'}getName(){return this.mPluginName}_setOption(t){return 0}init(t){return this.mActiveFlag=!0,t&&('boolean'==typeof t.activeFlag&&(this.mActiveFlag=t.activeFlag),'boolean'==typeof t.errorOutputFlag&&this.setErrorOutput(t.errorOutputFlag),0!==this._setOption(t))?-1:(this.mInitFlag=!0,0)}done(){return this.mInitFlag=!1,this.mActiveFlag=!1,this.mOnInitFunc=null,this.mOnErrorFunc=null,super.setErrorOutputDefault(),0}reset(t){return this.mActiveFlag=this.isInit(),0}isInit(){return this.mInitFlag}_clearInit(){this.mInitFlag=!1,this.mActiveFlag=!1}setFeatureList(t){return 0}isActive(){return this.mActiveFlag}setActiveOn(){return this.mActiveFlag=!0,0}setActiveOff(){return this.mActiveFlag=!1,0}_getErrorOutputFunc(){return t=>this._onError(new Error(t))}_onInit(){if('function'==typeof this.mOnInitFunc)try{return this.mOnInitFunc(this.getName())}catch(t){return this.exception('Plugin._onInit',t),-1}return 0}_onError(t){if('function'==typeof this.mOnErrorFunc)try{return this.mOnErrorFunc(t)}catch(t){return this.isErrorOutput()&&console.log('===> EXCEPTION Plugin._onError: ',t.message),-1}return 0}set onInit(t){this.mOnInitFunc=t}get onInit(){return()=>this._onInit()}set onError(t){this.mOnErrorFunc=t}get onError(){return t=>this._onError(t)}test(t,e){return{result:0}}}class Qt extends qt{constructor(t,e=!0){super(t,e),this.mPluginList=new S,this.mCurrentPlugin=null,this.mPluginList.setErrorOutputFunc(this._getErrorOutputFunc())}getType(){return'PluginGroup'}getClass(){return'PluginGroup'}init(t){return 0!==super.init(t)?-1:0!==this.startAllPlugin(t)?(this._clearInit(),-1):0}done(){return this.mCurrentPlugin=null,this.stopAllPlugin(),super.done()}setFeatureList(t){if('object'!=typeof t)return this.error('setFeatureList','keine gueltige Feature Liste'),-1;if((t=>{for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0})(t))return 0;try{let e=super.setFeatureList(t),r=this.mPluginList.first();for(;r;)0!==r.setFeatureList(t)&&(e=-1),r=this.mPluginList.next();return e}catch(t){return this.exception('setFeatureList',t),-1}}setErrorOutput(t){super.setErrorOutput(t),this.mPluginList.setErrorOutput(t),this._setErrorOutputAllPlugin(t)}insertPlugin(t,e){return this.mPluginList.insert(t,e)}removePlugin(t){return this.mPluginList.remove(t)}removeAllPlugin(){return this.mPluginList.clear()}findPlugin(t,e){const r=this.mPluginList.find(t);return r||null}firstPlugin(){return this.mPluginList.first()}nextPlugin(){return this.mPluginList.next()}getPluginNameList(){return this.mPluginList.getNameList()}isCurrentPlugin(){return!!this.mCurrentPlugin}setCurrentPlugin(t){const e=this.findPlugin(t);return e?(this.mCurrentPlugin=e,0):(this.error('setCurrentPlugin','Kein Plugin vorhanden'),0)}getCurrentPlugin(){return this.mCurrentPlugin}getCurrentPluginName(){return this.mCurrentPlugin?this.mCurrentPlugin.getName():''}isPlugin(t){return!!this.mPluginList.find(t)}getPluginSize(){return this.mPluginList.getSize()}startPlugin(t,e){const r=this.mPluginList.find(t);return r?r.isInit()?0:r.init(e):(this.error('startPlugin','Plugin nicht vorhanden'),-1)}stopPlugin(t){const e=this.mPluginList.find(t);return e?e.done():(this.error('stopPlugin','Plugin nicht vorhanden'),-1)}startAllPlugin(t){try{let e=0,r=this.mPluginList.first();for(;r;)r.isInit()||0===r.init(t)||(e=-1),r=this.mPluginList.next();return e}catch(t){return this.exception('startAllPlugin',t),-1}}stopAllPlugin(){try{let t=0,e=this.mPluginList.first();for(;e;)0!==e.done()&&(t=-1),e=this.mPluginList.next();return t}catch(t){return this.exception('stopAllPlugin',t),-1}}_setErrorOutputAllPlugin(t){try{let e=this.mPluginList.first();for(;e;)t?e.setErrorOutputOn():e.setErrorOutputOff(),e=this.mPluginList.next();return 0}catch(t){return this.exception('_setErrorOutputAllPlugin',t),-1}}}class Zt extends Qt{constructor(t,e=!0){super(t,e),this.mSendMessageFunc=null,this.mInitEvent=new Yt("init"),this.mErrorEvent=new Yt("error"),e&&w.insert(t,this),this.mInitEvent.setComponentName(t),this.mErrorEvent.setComponentName(t),this.mInitEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mErrorEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.setSendMessageFunc(w.getSendMessageFunc())}getType(){return'Component'}getClass(){return'Component'}getVersion(){return"0.6.1.0002 vom 08.01.2022 (alpha)"}init(t){return 0!==super.init(t)?-1:0}done(){return this.mInitEvent.clear(),this.mErrorEvent.clear(),super.done()}setErrorOutput(t){super.setErrorOutput(t),this.mInitEvent.setErrorOutput(t),this.mErrorEvent.setErrorOutput(t)}connect(){return 0}isConnect(){return!0}getNetType(){return'undefined'}_addEventListenerAllPlugin(t,e,r){try{let n=-1,s=this.mPluginList.first();for(;s;){if(s instanceof Zt){const i=s;i&&0===i.addEventListener(t,e,r)&&(n=0)}s=this.mPluginList.next()}return n}catch(t){return this.exception('addEventListenerAllPlugin',t),-1}}_removeEventListenerAllPlugin(t,e){try{let r=-1,n=this.mPluginList.first();for(;n;){if(n instanceof Zt){const s=n;s&&0===s.removeEventListener(t,e)&&(r=0)}n=this.mPluginList.next()}return r}catch(t){return this.exception('removeEventListenerAllPlugin',t),-1}}setSendMessageFunc(t){return this.mSendMessageFunc=t,0}sendMessage(t){return'function'!=typeof this.mSendMessageFunc?-1:this.mSendMessageFunc(t)}handleMessage(t){try{let e=0,r=!0;switch(t.action){case"init":e=this.mInitEvent.dispatch(t);break;case"error":e=this.mErrorEvent.dispatch(t);break;default:this.error('handleMessage','ungueltige Nachricht: '+t.action),e=-1,r=!1}return r}catch(t){return this.exception('handleMessage',t),!1}}getHandleMessageFunc(){return t=>this.handleMessage(t)}_onInit(){return this.mInitEvent.dispatch(this.getName())}get onInit(){return()=>this._onInit()}_onError(t){return this.mErrorEvent.dispatch(t)}get onError(){return t=>this._onError(t)}addEventListener(t,e,r){let n=0;switch(e){case"init":n=this.mInitEvent.addListener(t,r);break;case"error":this._addEventListenerAllPlugin(t,e,r),n=this.mErrorEvent.addListener(t,r);break;default:n=this._addEventListenerAllPlugin(t,e,r)}return n}removeEventListener(t,e){let r=0;switch(e){case"init":r=this.mInitEvent.removeListener(t);break;case"error":this._removeEventListenerAllPlugin(t,e),r=this.mErrorEvent.removeListener(t);break;default:r=this._removeEventListenerAllPlugin(t,e)}return r}}const $t='reset',te='featureInfo',ee='setDialog',re='startDialog',ne='stopDialog',se='loadDialogFile',ie='writeData',oe='setting',ue='setState',ae='setStateContext',ce='skipNextSpeak';
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function me(t,e,r,n){return new(r||(r=Promise))((function(s,i){function o(t){try{a(n.next(t))}catch(t){i(t)}}function u(t){try{a(n.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,u)}a((n=n.apply(t,e||[])).next())}))}class le extends F{constructor(t,e=!0){if(super(t||'Factory'),this.mFactoryName='Factory',this.mFactoryName=t||'Factory',e&&0!==N.insert(this.getName(),this))throw new Error('Factory '+this.getName()+' existiert bereits im FactoryManager')}isMock(){return!1}getType(){return'any'}getName(){return this.mFactoryName}create(t="",e="",r=!0){return null}createAsync(t="",e="",r=!0){return me(this,void 0,void 0,(function*(){return null}))}}class he extends le{constructor(t){super(t||'PluginFactory')}getType(){return'Plugin'}getName(){return'PluginFactory'}_newPlugin(t,e,r){return new qt(t,r)}create(t="",e="",r=!0){const n=t||'Plugin',s=e||'Plugin';try{return this._newPlugin(n,s,r)}catch(t){return this.exception('PluginFactory.create',t),null}}}const pe='portInit',ge='portOpen',Ee='portClose',de='portStart',Oe='portStop',ve='portResult',fe='portError',Le='NLP',Pe='NLU',Fe='ASR',ye='ASRNLU',Ne='TTS',Se='CloudAmazon',Ce='CloudGoogle',xe='CloudMicrosoft',Ie='CloudRasa';class _e extends F{constructor(){super('PortList'),this.mPortList=new Map,this.mPortIterator=this.mPortList.values()}getSize(){return this.mPortList.size}getNameList(){return Array.from(this.mPortList.keys())}insert(t,e){try{return t?e?this.mPortList.has(t)?(this.error('insert','Port existiert bereits: '+t),-1):(this.mPortList.set(t,e),0):(this.error('insert','kein Port uebergeben'),-1):(this.error('insert','kein Portname uebergeben'),-1)}catch(t){return this.exception('insert',t),-1}}find(t){try{return this.mPortList.get(t)}catch(t){return void this.exception('find',t)}}first(){try{return this.mPortIterator=this.mPortList.values(),this.mPortIterator.next().value}catch(t){return void this.exception('first',t)}}next(){try{return this.mPortIterator.next().value}catch(t){return void this.exception('next',t)}}remove(t){try{return this.mPortList.delete(t),0}catch(t){return this.exception('remove',t),-1}}clear(){try{return this.mPortList.clear(),0}catch(t){return this.exception('clear',t),-1}}}class Be{constructor(){}static setErrorOutput(t){Be.mErrorBase.setErrorOutput(t),Be.mPortList.setErrorOutput(t)}static setErrorOutputOn(){Be.mErrorBase.setErrorOutputOn(),Be.mPortList.setErrorOutputOn()}static setErrorOutputOff(){Be.mErrorBase.setErrorOutputOff(),Be.mPortList.setErrorOutputOff()}static setErrorOutputFunc(t){Be.mErrorBase.setErrorOutputFunc(t),Be.mPortList.setErrorOutputFunc(t)}static getSize(){return Be.mPortList.getSize()}static getNameList(){return Be.mPortList.getNameList()}static findTypeList(t){const e=[];let r=Be.first();for(;r;)r.getType()===t&&e.push(r),r=Be.next();return e}static findClassList(t){const e=[];let r=Be.first();for(;r;)r.getClass()===t&&e.push(r),r=Be.next();return e}static get(t,e){if(!t)return Be.mErrorBase.error('get','kein Portname uebergeben'),null;let r=Be.find(t);if(r)return r;if(!e)return Be.mErrorBase.error('get','keine Portklasse uebergeben'),null;try{r=new e(t)}catch(t){return Be.mErrorBase.exception('get',t),null}return t!==r.getName()?(Be.mErrorBase.error('get','Portnamen stimmen nicht ueberein '+t+' != '+r.getName()),Be.remove(r.getName()),null):r}static find(t){const e=Be.mPortList.find(t);return e||null}static first(){return Be.mPortList.first()}static next(){return Be.mPortList.next()}static insert(t,e){return Be.mPortList.insert(t,e)}static remove(t){return Be.mPortList.remove(t)}static clear(){let t=Be.mPortList.first();for(;t;){try{t.done()}catch(t){Be.mErrorBase.exception('clear',t)}t=Be.mPortList.next()}return Be.mPortList.clear()}}Be.mPortList=new _e,Be.mErrorBase=new F('PortManager');class Re extends F{constructor(t,e=!0){if(super('Port'),this.mPortName='',this.mPluginName='',this.mInitEvent=new Yt("portInit"),this.mOpenEvent=new Yt("portOpen"),this.mCloseEvent=new Yt("portClose"),this.mStartEvent=new Yt("portStart"),this.mStopEvent=new Yt("portStop"),this.mResultEvent=new Yt("portResult"),this.mErrorEvent=new Yt("portError"),this.mInitFlag=!1,this.mOpenFlag=!1,this.mRunFlag=!1,this._setErrorClassName(this.getClass()),this.mPortName=t,e&&0!==Be.insert(t,this))throw new Error('Port '+this.getName()+' ist bereits im PortManager vorhanden');this.setErrorOutputFunc(this._getErrorOutputFunc()),this.mInitEvent.setComponentName(t),this.mOpenEvent.setComponentName(t),this.mCloseEvent.setComponentName(t),this.mStartEvent.setComponentName(t),this.mStopEvent.setComponentName(t),this.mResultEvent.setComponentName(t),this.mErrorEvent.setComponentName(t),this.mInitEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mOpenEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mCloseEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mStartEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mStopEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mResultEvent.setErrorOutputFunc(this._getErrorOutputFunc()),this.mErrorEvent.setErrorOutputFunc(this._getErrorOutputFunc())}isMock(){return!1}getType(){return'Port'}getClass(){return'Port'}getName(){return this.mPortName}getVersion(){return"0.6.1.0002 vom 08.01.2022 (alpha)"}init(t){return this.mInitFlag?(this.error('init','Port ist bereits initialisiert'),-1):(t&&'boolean'==typeof t.errorOutputFlag&&this.setErrorOutput(t.errorOutputFlag),this.mInitFlag=!0,0)}done(){return this.stop(this.mPluginName),this.close(),this.mPluginName='',this.mInitFlag=!1,this.mOpenFlag=!1,this.mRunFlag=!1,this.mInitEvent.clear(),this.mOpenEvent.clear(),this.mCloseEvent.clear(),this.mStartEvent.clear(),this.mStopEvent.clear(),this.mResultEvent.clear(),this.mErrorEvent.clear(),super.setErrorOutputDefault(),0}reset(t){return 0}isInit(){return this.mInitFlag}isServer(){return!1}_clearInit(){this.mInitFlag=!1}_getErrorOutputFunc(){return t=>this._onError(new Error(t))}setErrorOutput(t){super.setErrorOutput(t),this.mInitEvent.setErrorOutput(t),this.mOpenEvent.setErrorOutput(t),this.mCloseEvent.setErrorOutput(t),this.mStartEvent.setErrorOutput(t),this.mStopEvent.setErrorOutput(t),this.mResultEvent.setErrorOutput(t),this.mErrorEvent.setErrorOutput(t)}_onInit(t){const e={event:"portInit",type:'',source:this.getName(),dest:'',result:t,data:null};return this.mInitEvent.dispatch(e)}_onOpen(){const t={event:"portOpen",type:'',source:this.getName(),dest:'',result:0,data:null};return this.mOpenEvent.dispatch(t)}_onClose(){const t={event:"portClose",type:'',source:this.getName(),dest:'',result:0,data:null};return this.mCloseEvent.dispatch(t)}_onStart(t="",e=""){const r={event:"portStart",type:e,source:this.getName(),dest:t,result:0,data:null};return t?this.mStartEvent.dispatchListener(t,r):this.mStartEvent.dispatch(r)}_onStop(t="",e=""){const r={event:"portStop",type:e,source:this.getName(),dest:t,result:0,data:null};return t?this.mStopEvent.dispatchListener(t,r):this.mStopEvent.dispatch(r)}_onResult(t,e="",r=""){const n={event:"portResult",type:r,source:this.getName(),dest:e,result:0,data:t};return e?this.mResultEvent.dispatchListener(e,n):this.mResultEvent.dispatch(n)}_onError(t,e="",r=""){return e?this.mErrorEvent.dispatchListener(e,t):this.mErrorEvent.dispatch(t)}addInitEvent(t,e){return this.mInitEvent.addListener(t,e)}addOpenEvent(t,e){return this.mOpenEvent.addListener(t,e)}addCloseEvent(t,e){return this.mCloseEvent.addListener(t,e)}addStartEvent(t,e){return this.mStartEvent.addListener(t,e)}addStopEvent(t,e){return this.mStopEvent.addListener(t,e)}addResultEvent(t,e){return this.mResultEvent.addListener(t,e)}addErrorEvent(t,e){return this.mErrorEvent.addListener(t,e)}removeInitEvent(t){return this.mInitEvent.removeListener(t)}removeOpenEvent(t){return this.mOpenEvent.removeListener(t)}removeCloseEvent(t){return this.mCloseEvent.removeListener(t)}removeStartEvent(t){return this.mStartEvent.removeListener(t)}removeStopEvent(t){return this.mStopEvent.removeListener(t)}removeResultEvent(t){return this.mResultEvent.removeListener(t)}removeErrorEvent(t){return this.mErrorEvent.removeListener(t)}removeAllEvent(t){return this.removeInitEvent(t),this.removeOpenEvent(t),this.removeCloseEvent(t),this.removeStartEvent(t),this.removeStopEvent(t),this.removeResultEvent(t),this.removeErrorEvent(t),0}setConfig(t){return 0}getConfig(){return{}}isOpen(){return this.mOpenFlag}open(t){return 0}close(){return 0}getPluginName(){return this.mPluginName}getActionName(){return''}isRunning(t,e){return this.mRunFlag}isAction(t){return!1}setActionTimeout(t){}start(t,e,r){return 0}stop(t,e,r){return 0}test(t,e,r){return{result:0}}}class be extends le{constructor(t){super(t||'PortFactory')}getType(){return'Port'}getName(){return'PortFactory'}_newPort(t,e,r){return new Re(t,r)}create(t="",e="",r=!0){const n=t||'Port',s=e||'Port';try{return this._newPort(n,s,r)}catch(t){return this.exception('PortFactory.create',t),null}}}class ke{constructor(t="",e=""){this.transactionId=0,this.plugin='',this.type='',this.result=null,this.error=null,this.plugin=t,this.type=e,ke.mTransactionCounter+=1,this.transactionId=ke.mTransactionCounter}}ke.mTransactionCounter=0;class we{constructor(){}static setErrorOutputOn(){y.setErrorOutputOn(),w.setErrorOutputOn(),N.setErrorOutputOn(),C.setErrorOutputOn()}static setErrorOutputOff(){y.setErrorOutputOff(),w.setErrorOutputOff(),N.setErrorOutputOff(),C.setErrorOutputOff()}static setErrorOutputFunc(t){y.setErrorOutputFunc(t),w.setErrorOutputFunc(t),N.setErrorOutputFunc(t),C.setErrorOutputFunc(t)}static insertBuilder(t,e){return y.insert(t,e)}static getBuilder(t,e){return y.get(t,e)}static findBuilder(t){return y.find(t)}static clear(){y.clear(),w.clear(),N.clear(),C.clear()}}class Ae{constructor(){}static setErrorOutputOn(){y.setErrorOutputOn(),w.setErrorOutputOn(),N.setErrorOutputOn(),C.setErrorOutputOn()}static setErrorOutputOff(){y.setErrorOutputOff(),w.setErrorOutputOff(),N.setErrorOutputOff(),C.setErrorOutputOff()}static setErrorOutputFunc(t){y.setErrorOutputFunc(t),w.setErrorOutputFunc(t),N.setErrorOutputFunc(t),C.setErrorOutputFunc(t)}static insertBuilder(t,e){return y.insert(t,e)}static getBuilder(t,e){return y.get(t,e)}static findBuilder(t){return y.find(t)}static clear(){y.clear(),w.clear(),N.clear(),C.clear()}}export{x as Builder,y as BuilderManager,Se as CLOUD_AMAZON_PORT,Ce as CLOUD_GOOGLE_PORT,xe as CLOUD_MICROSOFT_PORT,Ie as CLOUD_RASA_PORT,Zt as Component,w as ComponentManager,F as ErrorBase,Yt as EventFunctionList,le as Factory,N as FactoryManager,k as MESSAGE_COMPONENT_TYPE,ye as PORT_ASRNLU_ACTION,Fe as PORT_ASR_ACTION,Ee as PORT_CLOSE_EVENT,fe as PORT_ERROR_EVENT,pe as PORT_INIT_EVENT,Le as PORT_NLP_ACTION,Pe as PORT_NLU_ACTION,ge as PORT_OPEN_EVENT,ve as PORT_RESULT_EVENT,de as PORT_START_EVENT,Oe as PORT_STOP_EVENT,Ne as PORT_TTS_ACTION,qt as Plugin,he as PluginFactory,Qt as PluginGroup,S as PluginList,C as PluginManager,Re as Port,be as PortFactory,_e as PortList,Be as PortManager,ke as PortTransaction,Lt as SPEECH_ACTIONSTART_EVENT,Pt as SPEECH_ACTIONSTOP_EVENT,ft as SPEECH_ACTION_EVENT,jt as SPEECH_AGENTRESULT_EVENT,Xt as SPEECH_AGENTSTART_EVENT,Ut as SPEECH_AGENTSTOP_EVENT,e as SPEECH_APIMOCK_NAME,t as SPEECH_API_NAME,K as SPEECH_API_VERSION,n as SPEECH_AUDIO_FLAG,s as SPEECH_AUDIO_PATH,p as SPEECH_CORDOVA_TYPE,u as SPEECH_DEFAULT_EXT,_t as SPEECH_DIALOGACTIONSTOP_EVENT,It as SPEECH_DIALOGACTION_EVENT,St as SPEECH_DIALOGJSON_EVENT,Ct as SPEECH_DIALOGPARSE_EVENT,Ft as SPEECH_DIALOGSET_EVENT,Rt as SPEECH_DIALOGSPEAKSTART_EVENT,bt as SPEECH_DIALOGSPEAKSTOP_EVENT,Bt as SPEECH_DIALOGSPEAK_EVENT,yt as SPEECH_DIALOGSTART_EVENT,xt as SPEECH_DIALOGSTATESET_EVENT,Nt as SPEECH_DIALOGSTOP_EVENT,V as SPEECH_ERROR_EVENT,r as SPEECH_ERROR_OUTPUT,W as SPEECH_EVENT_EVENT,J as SPEECH_FEATUREINFO_EVENT,te as SPEECH_FEATUREINFO_MESSAGE,c as SPEECH_FILE_NAME,zt as SPEECH_INFERENCEACTIONSTOP_EVENT,Dt as SPEECH_INFERENCEACTION_EVENT,Tt as SPEECH_INFERENCEPARSE_EVENT,kt as SPEECH_INFERENCESET_EVENT,Gt as SPEECH_INFERENCESPEAKSTART_EVENT,Kt as SPEECH_INFERENCESPEAKSTOP_EVENT,Ht as SPEECH_INFERENCESPEAK_EVENT,wt as SPEECH_INFERENCESTART_EVENT,Mt as SPEECH_INFERENCESTATESET_EVENT,At as SPEECH_INFERENCESTOP_EVENT,X as SPEECH_INIT_EVENT,vt as SPEECH_INTENTRESULT_EVENT,dt as SPEECH_INTENTSTART_EVENT,Ot as SPEECH_INTENTSTOP_EVENT,mt as SPEECH_LISTENAUDIOSTART_EVENT,lt as SPEECH_LISTENAUDIOSTOP_EVENT,ut as SPEECH_LISTENINTENT_EVENT,it as SPEECH_LISTENINTERIMRESULT_EVENT,ot as SPEECH_LISTENNOMATCH_EVENT,at as SPEECH_LISTENRECOGNITIONSTART_EVENT,ct as SPEECH_LISTENRECOGNITIONSTOP_EVENT,st as SPEECH_LISTENRESULT_EVENT,ht as SPEECH_LISTENSOUNDSTART_EVENT,pt as SPEECH_LISTENSOUNDSTOP_EVENT,gt as SPEECH_LISTENSPEECHSTART_EVENT,Et as SPEECH_LISTENSPEECHSTOP_EVENT,rt as SPEECH_LISTENSTART_EVENT,nt as SPEECH_LISTENSTOP_EVENT,se as SPEECH_LOADDIALOGFILE_MESSAGE,i as SPEECH_MP3_EXT,a as SPEECH_PATH_NAME,Jt as SPEECH_PROMPTRESULT_EVENT,Wt as SPEECH_PROMPTSTART_EVENT,Vt as SPEECH_PROMPTSTOP_EVENT,$t as SPEECH_RESET_MESSAGE,H as SPEECH_SERVER_VERSION,ee as SPEECH_SETDIALOG_MESSAGE,ae as SPEECH_SETSTATECONTEXT_MESSAGE,ue as SPEECH_SETSTATE_MESSAGE,oe as SPEECH_SETTING_MESSAGE,ce as SPEECH_SKIPNEXTSPEAK_MESSAGE,et as SPEECH_SPEAKAUDIOUNLOCK_EVENT,$ as SPEECH_SPEAKSTART_EVENT,tt as SPEECH_SPEAKSTOP_EVENT,Z as SPEECH_SPEAK_EVENT,re as SPEECH_STARTDIALOG_MESSAGE,U as SPEECH_START_EVENT,ne as SPEECH_STOPDIALOG_MESSAGE,j as SPEECH_STOP_EVENT,T as SPEECH_VERSION_BUILD,D as SPEECH_VERSION_DATE,A as SPEECH_VERSION_NUMBER,z as SPEECH_VERSION_STRING,M as SPEECH_VERSION_TYPE,Q as SPEECH_WAKEWORDDETECT_EVENT,Y as SPEECH_WAKEWORDSTART_EVENT,q as SPEECH_WAKEWORDSTOP_EVENT,o as SPEECH_WAV_EXT,g as SPEECH_WEBSOCKET_TYPE,l as SPEECH_WEBWORKER_FILE,m as SPEECH_WEBWORKER_PATH,E as SPEECH_WEBWORKER_TYPE,h as SPEECH_WEB_TYPE,G as SPEECH_WORKER_VERSION,ie as SPEECH_WRITEDIALOGDATA_MESSAGE,b as SpeechBrowser,R as SpeechError,Ae as SpeechManager,we as SystemManager,O as VOICE_ANNA_NAME,P as VOICE_DEFAULT_NAME,L as VOICE_HANNA_NAME,f as VOICE_MARKUS_NAME,d as VOICE_PETRA_NAME,v as VOICE_YANNICK_NAME};
