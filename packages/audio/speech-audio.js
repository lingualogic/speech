/**
 * Speech-Audio Bundle
 *
 * Version: 0.6.1
 * Build:   0002
 * TYPE:    alpha
 * Datum:   08.01.2022
 *
 * Autor:   LinguaLogic Team
 * Lizenz:  MIT
 *
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

!function(t,e){'object'==typeof exports&&'undefined'!=typeof module?e(exports,require('@speech/core'),require('@speech/net'),require('@speech/file')):'function'==typeof define&&define.amd?define(['exports','@speech/core','@speech/net','@speech/file'],e):e((t='undefined'!=typeof globalThis?globalThis:t||self).speechAudio={},t.speechCore,t.speechNet,t.speechFile)}(this,(function(t,e,i,o){'use strict';const r='AudioContextFactory',n='AudioContext';class u extends e.Factory{constructor(t,e=!0){super(t||r,e),this.count=0}isMock(){return!1}getType(){return n}getName(){return r}create(t,e,i=!0){this.count++;try{return window.AudioContext||window.webkitAudioContext||null}catch(t){return this.exception('create',t),null}}}class s{constructor(){}static clear(){s.mAudioContext=null}static setErrorOutputOn(){s.mErrorBase.setErrorOutputOn()}static setErrorOutputOff(){s.mErrorBase.setErrorOutputOff()}static setErrorOutputFunc(t){s.mErrorBase.setErrorOutputFunc(t)}static _createAudioContext(){try{const t=e.FactoryManager.get(r,u);if(!t)return s.mErrorBase.error('_createAudioContext','keine AudioContext-Fabrik vorhanden'),null;const i=t.create();return null===i?(s.mErrorBase.error('_createAudioContext','kein AudioContext vorhanden'),null):new i}catch(t){return s.mErrorBase.exception('_createAudioContext',t),null}}static setAudioContext(t){return t?s.mAudioContext?(s.mErrorBase.error('setudioContext','AudioContext ist bereits vorhanden'),-1):(s.mAudioContext=t,0):(s.mErrorBase.error('setudioContext','Kein AudioContext uebergeben'),-1)}static getAudioContext(){return s.mAudioContext||(s.mAudioContext=s._createAudioContext()),s.mAudioContext}}s.mErrorBase=new e.ErrorBase('AudioContextManager'),s.mAudioContext=null;class a extends o.FileBrowserReader{constructor(t){super(t||'AudioHtml5Reader'),this.mAudioContextClass=null,this.mAudioContext=null,this.mAudioFormat="mp3",this.mOnAudioReadFunc=null}_detectAudioContext(){const t=e.FactoryManager.get(r,u);return t?(this.mAudioContextClass=t.create(),null!==this.mAudioContextClass||(this.error('_detectAudioContext','kein AudioContext vorhanden'),!1)):(this.error('_detectAudioContext','keine AudioContext-Fabrik vorhanden'),!1)}init(t){if(0!==super.init(t))return-1;if(t&&t.audioFormat&&this.setAudioFormat(t.audioFormat),t&&t.audioContext)this.mAudioContext=t.audioContext;else{if(!this._detectAudioContext())return-1;try{if(!this.mAudioContextClass)return-1;if(this.mAudioContext=s.getAudioContext(),!this.mAudioContext)return-1;this.mAudioContext.onstatechange=()=>{this.mAudioContext}}catch(t){return this._closeAudioContext(),this.exception('init',t),-1}}return this.mOnReadFunc=t=>this._decodeAudio(t),0}done(){return this._closeAudioContext(),this.mAudioContextClass=null,this.mAudioFormat="mp3",this.mOnAudioReadFunc=null,super.done()}_closeAudioContext(){this.mAudioContextClass&&this.mAudioContext,this.mAudioContext=null}set onRead(t){this.mOnAudioReadFunc=t}getAudioContext(){return this.mAudioContext}setAudioFormat(t){return"mp3"!==t&&"wav"!==t?(this.error('setAudioFormat','kein gueltiges Audioformat uebergeben: '+t),-1):(this.mAudioFormat=t,0)}getAudioFormat(){return this.mAudioFormat}_decodeAudio(t){if(!this.mAudioContext)return this.error('_decodeAudio','kein AudioContext vorhanden'),-1;try{return this.mAudioContext.decodeAudioData(t,(t=>{if(this.mOnAudioReadFunc)try{this.mOnAudioReadFunc(t)}catch(t){this.exception('_decodeAudio',t)}}),(t=>{this.error('_decodeAudio','DOMException')})),0}catch(t){return this.exception('_decodeAudio',t),-1}}read(t,e=i.XMLHTTPREQUEST_ARRAYBUFFER_RESPONSETYPE){return super.read(t,e)}}const h='UserMediaFactory',d='UserMedia';class l extends e.Factory{constructor(t,e=!0){super(t||h,e)}isMock(){return!1}getType(){return d}getName(){return h}create(t,e,i=!0){try{if(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia){const t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia||null;if(!t)return null;navigator.mediaDevices.getUserMedia=e=>new Promise(((i,o)=>{t.call(navigator,e,i,o)}))}return t=>navigator.mediaDevices.getUserMedia(t)}catch(t){return this.exception('create',t),null}}}const c=['audio/L16;rate=8000','audio/L16;rate=16000'],m=['audio/opus;rate=8000','audio/opus;rate=16000'];class A extends e.ErrorBase{constructor(){super('AudioCodec')}_findCodec(t,e){for(let i=0;i<e.length;i++)if(t===e[i])return!0;return!1}findPcmCodec(t){return this._findCodec(t,c)}findOpusCodec(t){return this._findCodec(t,m)}_float32ToInt16(t){const e=t<0?32768*t:32767*t;return Math.max(-32768,Math.min(32768,e))}_float32ArrayToInt16Array(t){const e=new ArrayBuffer(2*t.length),i=new Int16Array(e);let o=0;for(;o<t.length;)i[o]=this._float32ToInt16(t[o++]);return e}_int16ArrayToUint8Array(t){const e=new Uint8Array(t),i=e.byteLength;let o='';for(let t=0;t<i;t++)o+=String.fromCharCode(e[t]);return o}encodePCM(t,e){return this.findPcmCodec(e)?[this._int16ArrayToUint8Array(this._float32ArrayToInt16Array(t))]:[t]}decodePCM(t){try{const e=new Uint8Array(t),i=e.length,o=new Float32Array(i/2),r=new Int16Array(1);let n=0;for(let t=0;t<i;t+=2)r[0]=(e[t+1]<<8)+e[t],o[n]=r[0]/32768,n++;return o}catch(t){return this.exception('decodePCM',t),[]}}decodePCMInt16(t){try{const e=new Int16Array(t),i=e.length,o=new Float32Array(i);let r=0;for(;r<i;++r)o[r]=e[r]/32768;return o}catch(t){return console.log('GoogleAudioCodec.decodePCM: Exception',t),this.exception('decodePCM',t),[]}}}class f{constructor(t,e,i,o,r){this.fromSampleRate=0,this.toSampleRate=0,this.channels=0,this.outputBufferSize=0,this.noReturn=!1,this.resampler=null,this.ratioWeight=0,this.interpolate=null,this.lastWeight=0,this.outputBuffer=null,this.lastOutput=null,this.fromSampleRate=t,this.toSampleRate=e,this.channels=i||0,this.outputBufferSize=o,this.noReturn=!!r,this.initialize()}initialize(){if(!(this.fromSampleRate>0&&this.toSampleRate>0&&this.channels>0))throw new Error('Invalid settings specified for the resampler.');this.fromSampleRate===this.toSampleRate?(this.resampler=this.bypassResampler,this.ratioWeight=1):(this.compileInterpolationFunction(),this.resampler=this.interpolate,this.ratioWeight=this.fromSampleRate/this.toSampleRate,this.tailExists=!1,this.lastWeight=0,this.initializeBuffers())}compileInterpolationFunction(){let t='var bufferLength = Math.min(buffer.length, this.outputBufferSize);        if ((bufferLength % '+this.channels+') == 0) {            if (bufferLength > 0) {                var ratioWeight = this.ratioWeight;                var weight = 0;';for(let e=0;e<this.channels;++e)t+='var output'+e+' = 0;';t+='var actualPosition = 0;                var amountToNext = 0;                var alreadyProcessedTail = !this.tailExists;                this.tailExists = false;                var outputBuffer = this.outputBuffer;                var outputOffset = 0;                var currentPosition = 0;                do {                    if (alreadyProcessedTail) {                        weight = ratioWeight;';for(let e=0;e<this.channels;++e)t+='output'+e+' = 0;';t+='}                    else {                        weight = this.lastWeight;';for(let e=0;e<this.channels;++e)t+='output'+e+' = this.lastOutput['+e+'];';t+='alreadyProcessedTail = true;                    }                    while (weight > 0 && actualPosition < bufferLength) {                        amountToNext = 1 + actualPosition - currentPosition;                        if (weight >= amountToNext) {';for(let e=0;e<this.channels;++e)t+='output'+e+' += buffer[actualPosition++] * amountToNext;';t+='currentPosition = actualPosition;                            weight -= amountToNext;                        }                        else {';for(let e=0;e<this.channels;++e)t+='output'+e+' += buffer[actualPosition'+(e>0?' + '+e:'')+'] * weight;';t+='currentPosition += weight;                            weight = 0;                            break;                        }                    }                    if (weight == 0) {';for(let e=0;e<this.channels;++e)t+='outputBuffer[outputOffset++] = output'+e+' / ratioWeight;';t+='}                    else {                        this.lastWeight = weight;';for(let e=0;e<this.channels;++e)t+='this.lastOutput['+e+'] = output'+e+';';t+='this.tailExists = true;                        break;                    }                } while (actualPosition < bufferLength);                return this.bufferSlice(outputOffset);            }            else {                return (this.noReturn) ? 0 : [];            }        }        else {            throw(new Error("Buffer was of incorrect sample length."));        }',this.interpolate=Function('buffer',t)}bypassResampler(t){return this.noReturn?(this.outputBuffer=t,t.length):t}bufferSlice(t){if(this.noReturn)return t;try{return this.outputBuffer.subarray(0,t)}catch(e){try{return this.outputBuffer.length=t,this.outputBuffer}catch(e){return this.outputBuffer.slice(0,t)}}}initializeBuffers(t){try{this.outputBuffer=new Float32Array(this.outputBufferSize),this.lastOutput=new Float32Array(this.channels)}catch(t){this.outputBuffer=[],this.lastOutput=[]}}}const p=16e3;class g extends e.ErrorBase{constructor(t){super('AudioBrowserPlayer'),this.mAudioContext=null,this.mAudioCodec=null,this.mResampler=null,this.mOnAudioStartFunc=null,this.mOnAudioStopFunc=null,this.mOnAudioEndFunc=null,this.mAudioSource=null,this.mAudioArray=[],this.mQueue=[],this.mBeginSpeakFlag=!0,this.mAudioStopFlag=!1,this.mAudioBuffer=null,this.mSource=null,this.mAudioContext=t,this.mAudioCodec=new A}_onAudioStart(){if(this.mOnAudioStartFunc)try{this.mOnAudioStartFunc()}catch(t){this.exception('_onAudioStart',t)}}_onAudioStop(){if(this.mOnAudioStopFunc)try{this.mOnAudioStopFunc()}catch(t){this.exception('_onAudioStop',t)}}set onAudioStart(t){this.mOnAudioStartFunc=t}set onAudioStop(t){this.mOnAudioStopFunc=t}start(){this.mOnAudioEndFunc=null,this.mAudioSource=null,this.mAudioArray=[],this.mQueue=[],this.mBeginSpeakFlag=!0,this.mAudioStopFlag=!1}_getAudioBufferFirst(t){let e=null;try{const i=new Float32Array(t.length);i.set(t),e=new AudioBuffer({length:i.length,numberOfChannels:1,sampleRate:p}),e.getChannelData(0).set(i)}catch(t){e=null,console.log('AudioPlayer._getAudioBufferFirst: Exception',t)}return e}_getAudioBufferSecond(t){let e=null;try{const i=new Float32Array(t.length);i.set(t),e=this.mAudioContext.createBuffer(1,i.length,p),e.getChannelData(0).set(i)}catch(t){e=null,console.log('AudioPlayer._getAudioBufferSecond: Exception',t)}return e}_getAudioBufferResample(t){let e=null;try{const i=new Float32Array(1.4*t.length);i.set(t),this.mResampler=new f(p,22500,1,i.length,void 0);const o=this.mResampler.resampler(i);e=this.mAudioContext.createBuffer(1,o.length,22500),e.getChannelData(0).set(o)}catch(t){e=null,console.log('AudioPlayer._getAudioBufferResample: Exception',t)}return e}playByStreamOld(t,e){try{if(!this.mAudioContext)return void console.log('AudioPlayer.playByStream: kein AudioContext vorhanden');if(this.mOnAudioEndFunc=t.onaudioend,0===e.length||this.mAudioStopFlag)return this.mBeginSpeakFlag=!0,t.onaudioend(),this.mOnAudioEndFunc=null,void(this.mAudioSource=null);this.mAudioSource=this.mAudioContext.createBufferSource(),this.mAudioSource.onended=()=>this.playByStreamOld(t,e);const i=e.shift();let o=this._getAudioBufferFirst(i);if(o||(o=this._getAudioBufferSecond(i)),o||(o=this._getAudioBufferResample(i)),!o)return void this.error('playByStream','kein Audiobuffer erzeugt');this.mAudioSource.buffer=o,this.mAudioSource.connect(this.mAudioContext.destination),this.mAudioSource.start?this.mAudioSource.start(0):this.mAudioSource.noteOn(0),t.onaudiostart()}catch(e){this.mBeginSpeakFlag=!0,t.onaudioend(),this.mOnAudioEndFunc=null,this.mAudioSource=null,console.log('AudioPlayer.playByStream: Exception',e),this.exception('playByStream',e)}}playByStream(t){try{if(!this.mAudioContext)return void console.log('AudioPlayer.playByStream: kein AudioContext vorhanden');if(0===t.length||this.mAudioStopFlag)return this.mBeginSpeakFlag=!0,this._onAudioStop(),void(this.mAudioSource=null);this.mAudioSource=this.mAudioContext.createBufferSource(),this.mAudioSource.onended=()=>this.stop();const e=t.shift();let i=this._getAudioBufferFirst(e);if(i||(i=this._getAudioBufferSecond(e)),i||(i=this._getAudioBufferResample(e)),!i)return void this.error('playByStream','kein Audiobuffer erzeugt');this.mAudioSource.buffer=i,this.mAudioSource.connect(this.mAudioContext.destination),this.mAudioSource.start?this.mAudioSource.start(0):this.mAudioSource.noteOn(0),this._onAudioStart()}catch(t){this.mBeginSpeakFlag=!0,this._onAudioStop(),this.mAudioSource=null,this.exception('playByStream',t)}}decodeOld(t,e){try{if(this.mAudioCodec.findPcmCodec(t.codec)){const i=this.mAudioCodec.decodePCM(e);this.mAudioArray.push(i),this.mQueue.push(i),this.mBeginSpeakFlag&&(this.mBeginSpeakFlag=!1,this.playByStreamOld(t,this.mAudioArray))}else this.mAudioCodec.findOpusCodec(t.codec)||this.error('decode','Kein Decoder vorhanden fuer '+t.codec)}catch(t){this.exception('decode',t)}}decode(t,e){try{if(this.mAudioCodec.findPcmCodec(t.codec)){const t=this.mAudioCodec.decodePCM(e);this.mAudioArray.push(t),this.mQueue.push(t),this.mBeginSpeakFlag&&(this.mBeginSpeakFlag=!1,this.playByStream(this.mAudioArray))}else this.error('decode','Kein Decoder vorhanden fuer '+t.codec)}catch(t){this.exception('decode',t)}}decodeAudio(t,e){if(!this.mAudioContext)return this.error('_decodeAudio','kein AudioContext vorhanden'),-1;try{return this.mAudioContext.decodeAudioData(e,(e=>{this.mAudioBuffer=e,this._playStart(t)}),(t=>{this.error('_decodeAudio','DOMException')})),0}catch(t){return this.exception('_decodeAudio',t),-1}}_playStart(t){if(!this.mAudioBuffer)return this.error('_playStart','kein AudioBuffer vorhanden'),-1;if(!this.mAudioContext)return this.error('_playStart','kein AudioContext vorhanden'),-1;try{return this.mSource=this.mAudioContext.createBufferSource(),this.mSource.onended=()=>{t.onaudioend&&t.onaudioend()},this.mSource.buffer=this.mAudioBuffer,this.mSource.connect(this.mAudioContext.destination),this.mSource.start?this.mSource.start(0):this.mSource.noteOn(0),t.onaudiostart&&t.onaudiostart(),0}catch(t){return this.exception('_playStart',t),-1}}stopOld(){try{this.mAudioStopFlag=!0,this.mAudioSource&&(this.mAudioSource.stop(0),this.mAudioSource.disconnect(0),'function'==typeof this.mOnAudioEndFunc&&this.mOnAudioEndFunc())}catch(t){this.exception('stop',t)}this.mAudioSource=null}stop(){try{this.mAudioStopFlag=!0,this.mAudioSource&&(this.mAudioSource.stop(0),this.mAudioSource.disconnect(0),this._onAudioStop())}catch(t){this.exception('stop',t)}this.mAudioSource=null}stopAudio(){if(this.mSource){try{this.mSource.stop?this.mSource.stop(0):this.mSource.noteOff(0),this.mSource.disconnect(0)}catch(t){this.exception('stop',t)}this.mSource=null,this.mAudioBuffer=null}}}class y extends e.ErrorBase{constructor(t,e){super('AudioBrowserRecorder'),this.mAudioContext=null,this.mAudioCodec=null,this.mResampler=null,this.mServerFlag=!1,this.mBufferSize=2048,this.mSampleRate=16e3,this.mCodec="audio/L16;rate=16000",this.mAudioInputNode=null,this.mAnalyseNode=null,this.mRecordingNode=null,this.mUserMediaStream=null,this.mChannelDataList=[],this.mBytesRecorded=0,this.mRecordingFlag=!1,this.mOnVolumeFunc=null,this.mOnEndedFunc=null,this.mOnMicrophoneStartFunc=null,this.mOnMicrophoneStopFunc=null,this.mOnStreamStartFunc=null,this.mOnStreamStopFunc=null,this.mOnStreamDataFunc=null,this.mAudioContext=t,this.mOnVolumeFunc=e,this.mAudioCodec=new A;try{this.mResampler=new f(this.mAudioContext.sampleRate,this.mSampleRate,1,this.mBufferSize,void 0)}catch(t){throw this.exception('constructor',t),new Error('AudioBrowserRecorder nicht initialisiert')}}setServer(t){this.mServerFlag=t}_closeMediaStream(){try{if(this.mUserMediaStream&&this.mUserMediaStream.getAudioTracks){const t=this.mUserMediaStream.getAudioTracks();for(const e of t)e.stop&&e.stop()}}catch(t){this.exception('_closeMediaStream',t)}this.mUserMediaStream=null}getAudioData(t){let e=0;for(const i of t)e+=i.length;const i=new Int16Array(e);let o=0;for(const e of t)for(let t=0;t<e.length;t++)i[o]=e[t],o++;return i.buffer}_onEnded(){const t=this.getAudioData(this.mChannelDataList);if('function'==typeof this.mOnEndedFunc)try{this.mOnEndedFunc(t)}catch(t){return this.exception('_onEnded',t),-1}return 0}_onMicrophoneStart(){if('function'==typeof this.mOnMicrophoneStartFunc)try{this.mOnMicrophoneStartFunc()}catch(t){return this.exception('_onMicrophoneStart',t),-1}return 0}_onMicrophoneStop(){if('function'==typeof this.mOnMicrophoneStopFunc)try{this.mOnMicrophoneStopFunc()}catch(t){return this.exception('_onMicrophoneStop',t),-1}return 0}_onVolume(t){if('function'==typeof this.mOnVolumeFunc)try{this.mOnVolumeFunc(t)}catch(t){return this.exception('_onVolume',t),-1}return 0}_onAudioProcess(t){try{if(!this.mRecordingFlag)return this.mAudioInputNode.disconnect(this.mAnalyseNode),this.mAnalyseNode.disconnect(this.mRecordingNode),this.mRecordingNode.disconnect(this.mAudioContext.destination),this._closeMediaStream(),this._onMicrophoneStop(),this._onStreamStop(),void this._onEnded();const e=t.inputBuffer.getChannelData(0),i=this.mResampler.resampler(e);this.mBytesRecorded+=i.length;const o=new Uint8Array(this.mAnalyseNode.frequencyBinCount);if(this.mAnalyseNode.getByteTimeDomainData(o),this.mAudioCodec.findPcmCodec(this.mCodec)){this.mAudioCodec.encodePCM(i,this.mCodec).forEach((t=>{0===this._onStreamData(t)?this.mChannelDataList.push(t):this.mRecordingFlag=!1}))}else this.error('_onAudioProcess','Codec nicht implementiert');this._onVolume(o)}catch(t){this.exception('_onAudioProcess',t)}}_onStreamStart(){if('function'==typeof this.mOnStreamStartFunc)try{this.mOnStreamStartFunc()}catch(t){this.exception('_onStreamStart',t)}}_onStreamStop(){if('function'==typeof this.mOnStreamStopFunc)try{this.mOnStreamStopFunc()}catch(t){this.exception('_onStreamStop',t)}}_onStreamData(t){if('function'==typeof this.mOnStreamDataFunc)try{return this.mOnStreamDataFunc(t)}catch(t){return this.exception('_onStreamData',t),-1}return 0}set onStreamStart(t){this.mOnStreamStartFunc=t}set onStreamStop(t){this.mOnStreamStopFunc=t}set onStreamData(t){this.mOnStreamDataFunc=t}start(t,e){this.mRecordingFlag=!0,this.mUserMediaStream=t,this.mCodec=e,this.mAudioContext.resume().then((()=>{try{this._onStreamStart(),this.mAudioInputNode=this.mAudioContext.createMediaStreamSource(this.mUserMediaStream),this.mAnalyseNode=this.mAudioContext.createAnalyser(),this.mRecordingNode=this.mAudioContext.createScriptProcessor(this.mBufferSize,1,2),this.mRecordingNode.onaudioprocess=t=>this._onAudioProcess(t),this.mAudioInputNode.connect(this.mAnalyseNode),this.mAnalyseNode.connect(this.mRecordingNode),this.mRecordingNode.connect(this.mAudioContext.destination),this._onMicrophoneStart()}catch(t){this.exception('start',t)}}),(t=>{t&&t.message&&this.error('start.resume',t.message)}))}startAudio(t,e){}stop(t){this.mOnEndedFunc=t,this.mRecordingFlag=!1}set onMicrophoneStart(t){this.mOnMicrophoneStartFunc=t}set onMicrophoneStop(t){this.mOnMicrophoneStopFunc=t}}const S='AudioPlayerFactory',C='AudioPlayer',x='mp3',F='wav',_=x,P=16e3,O=['audio/L16;rate=8000','audio/L16;rate=16000'];class B extends e.ErrorBase{constructor(){super('NavigationAudioCodec')}_findCodec(t,e){for(let i=0;i<e.length;i++)if(t===e[i])return!0;return!1}findPcmCodec(t){return this._findCodec(t,O)}_float32ToInt16(t){const e=t<0?32768*t:32767*t;return Math.max(-32768,Math.min(32768,e))}_float32ArrayToInt16Array(t){const e=new Int16Array(t.length);let i=0;for(;i<t.length;)e[i]=this._float32ToInt16(t[i++]);return e}encodePCM(t,e){return this.findPcmCodec(e)?[this._float32ArrayToInt16Array(t)]:[t]}decodePCM(t){try{const e=new Int16Array(t),i=e.length,o=new Float32Array(i);let r=0;for(;r<i;++r)o[r]=e[r]/32768;return o}catch(t){return this.exception('decodePCM',t),[]}}}class E{constructor(t,e,i,o,r){this.fromSampleRate=0,this.toSampleRate=0,this.channels=0,this.outputBufferSize=0,this.noReturn=!1,this.resampler=null,this.ratioWeight=0,this.interpolate=null,this.lastWeight=0,this.outputBuffer=null,this.lastOutput=null,this.fromSampleRate=t,this.toSampleRate=e,this.channels=i||0,this.outputBufferSize=o,this.noReturn=!!r,this.initialize()}initialize(){if(!(this.fromSampleRate>0&&this.toSampleRate>0&&this.channels>0))throw new Error('Invalid settings specified for the resampler.');this.fromSampleRate===this.toSampleRate?(this.resampler=this.bypassResampler,this.ratioWeight=1):(this.compileInterpolationFunction(),this.resampler=this.interpolate,this.ratioWeight=this.fromSampleRate/this.toSampleRate,this.tailExists=!1,this.lastWeight=0,this.initializeBuffers())}compileInterpolationFunction(){let t='var bufferLength = Math.min(buffer.length, this.outputBufferSize);        if ((bufferLength % '+this.channels+') == 0) {            if (bufferLength > 0) {                var ratioWeight = this.ratioWeight;                var weight = 0;';for(let e=0;e<this.channels;++e)t+='var output'+e+' = 0;';t+='var actualPosition = 0;                var amountToNext = 0;                var alreadyProcessedTail = !this.tailExists;                this.tailExists = false;                var outputBuffer = this.outputBuffer;                var outputOffset = 0;                var currentPosition = 0;                do {                    if (alreadyProcessedTail) {                        weight = ratioWeight;';for(let e=0;e<this.channels;++e)t+='output'+e+' = 0;';t+='}                    else {                        weight = this.lastWeight;';for(let e=0;e<this.channels;++e)t+='output'+e+' = this.lastOutput['+e+'];';t+='alreadyProcessedTail = true;                    }                    while (weight > 0 && actualPosition < bufferLength) {                        amountToNext = 1 + actualPosition - currentPosition;                        if (weight >= amountToNext) {';for(let e=0;e<this.channels;++e)t+='output'+e+' += buffer[actualPosition++] * amountToNext;';t+='currentPosition = actualPosition;                            weight -= amountToNext;                        }                        else {';for(let e=0;e<this.channels;++e)t+='output'+e+' += buffer[actualPosition'+(e>0?' + '+e:'')+'] * weight;';t+='currentPosition += weight;                            weight = 0;                            break;                        }                    }                    if (weight == 0) {';for(let e=0;e<this.channels;++e)t+='outputBuffer[outputOffset++] = output'+e+' / ratioWeight;';t+='}                    else {                        this.lastWeight = weight;';for(let e=0;e<this.channels;++e)t+='this.lastOutput['+e+'] = output'+e+';';t+='this.tailExists = true;                        break;                    }                } while (actualPosition < bufferLength);                return this.bufferSlice(outputOffset);            }            else {                return (this.noReturn) ? 0 : [];            }        }        else {            throw(new Error("Buffer was of incorrect sample length."));        }',this.interpolate=Function('buffer',t)}bypassResampler(t){return this.noReturn?(this.outputBuffer=t,t.length):t}bufferSlice(t){if(this.noReturn)return t;try{return this.outputBuffer.subarray(0,t)}catch(e){try{return this.outputBuffer.length=t,this.outputBuffer}catch(e){return this.outputBuffer.slice(0,t)}}}initializeBuffers(t){try{this.outputBuffer=new Float32Array(this.outputBufferSize),this.lastOutput=new Float32Array(this.channels)}catch(t){this.outputBuffer=[],this.lastOutput=[]}}}class R extends e.Plugin{constructor(t,e=!0){super(t||C,e),this.mAudioContextClass=null,this.mAudioContext=null,this.mAudioFormat=_,this.mAudioBuffer=null,this.mXMLHttpRequestClass=null,this.mRequest=null,this.mSource=null,this.mAudioLoadFlag=!1,this.mAudioPlayFlag=!1,this.mAudioCancelFlag=!1,this.mOnAudioStartFunc=null,this.mOnAudioStopFunc=null,this.mOnAudioUnlockFunc=null}getType(){return'AudioPlayer'}getClass(){return'AudioPlayer'}_detectAudioContext(){const t=e.FactoryManager.get(r,u);return t?(this.mAudioContextClass=t.create(),null!==this.mAudioContextClass||(this.error('_detectAudioContext','kein AudioContext vorhanden'),!1)):(this.error('_detectAudioContext','keine AudioContext-Fabrik vorhanden'),!1)}_detectXMLHttpRequest(){const t=e.FactoryManager.get(i.XMLHTTPREQUEST_FACTORY_NAME,i.XMLHttpRequestFactory);return t?(this.mXMLHttpRequestClass=t.create(),null!==this.mXMLHttpRequestClass||(this.error('_detectXMLHttpRequest','kein XMLHttpRequest vorhanden'),!1)):(this.error('_detectXMLHttpRequest','keine XMLHttpRequest-Fabrik vorhanden'),!1)}init(t){if(this.isInit())return this.error('init','init doppelt aufgerufen'),-1;if(0!==super.init(t))return-1;if(!this._detectXMLHttpRequest())return this.setActiveOff(),0;if(t&&t.audioFormat&&this.setAudioFormat(t.audioFormat),t&&t.audioContext)this.mAudioContext=t.audioContext;else{if(!this._detectAudioContext())return this.setActiveOff(),0;try{if(!this.mAudioContextClass)return super._clearInit(),-1;if(this.mAudioContext=s.getAudioContext(),!this.mAudioContext)return super._clearInit(),-1;this.mAudioContext.onstatechange=()=>{this.mAudioContext}}catch(t){return this._closeAudioContext(),this.exception('init',t),super._clearInit(),-1}}try{if(this.mAudioContext){const t=['touchstart','touchend','mousedown','keydown'],e=document.body,i=()=>{'suspended'===this.mAudioContext.state||'interrupted'===this.mAudioContext.state?this.mAudioContext.resume().then(o):o()},o=()=>{t.forEach((t=>e.removeEventListener(t,i)))};t.forEach((t=>e.addEventListener(t,i,!1))),this.mAudioContext.onstatechange=()=>{this._onAudioUnlock()}}}catch(t){this.exception('init',t)}return 0}done(){return this.isInit()&&this.stop(),this._closeAudioContext(),this.mAudioContext=null,this.mAudioContextClass=null,this.mAudioFormat=_,this.mXMLHttpRequestClass=null,this.mRequest=null,this.mSource=null,this.mAudioBuffer=null,this.mAudioContext=null,this.mAudioLoadFlag=!1,this.mAudioPlayFlag=!1,this.mAudioCancelFlag=!1,this.mOnAudioStartFunc=null,this.mOnAudioStopFunc=null,this.mOnAudioUnlockFunc=null,super.done()}isActive(){return!!this.mAudioContext&&super.isActive()}setActiveOn(){return this.mAudioContext?super.setActiveOn():-1}_closeAudioContext(){this.mAudioContext&&(this.mAudioContext.onstatechange=void 0),this.mAudioContextClass&&(this.mAudioContext,this.mAudioContext=null)}_onAudioStart(){if('function'==typeof this.mOnAudioStartFunc)try{return this.mOnAudioStartFunc()}catch(t){return this.exception('_onAudioStart',t),-1}return 0}_onAudioStop(){if('function'==typeof this.mOnAudioStopFunc)try{return this.mOnAudioStopFunc()}catch(t){return this.exception('_onAudioStop',t),-1}return 0}_onAudioUnlock(){if('function'==typeof this.mOnAudioUnlockFunc)try{let t='undefined';return this.mAudioContext&&(t=this.mAudioContext.state),this.mOnAudioUnlockFunc(t)}catch(t){return this.exception('_onAudioUnlock',t),-1}return 0}set onAudioStart(t){this.mOnAudioStartFunc=t}set onAudioStop(t){this.mOnAudioStopFunc=t}set onAudioUnlock(t){this.mOnAudioUnlockFunc=t}getAudioContext(){return this.mAudioContext}_unlockAudio(t){if(this.mAudioContext){if('running'===this.mAudioContext.state)return void t(!0);if('suspended'===this.mAudioContext.state||'interrupted'===this.mAudioContext.state){const e=setTimeout((()=>{console.log('AudioPlayer._unlockAudio: timeout'),t(!1)}),2e3);this.mAudioContext.resume().then((()=>{clearTimeout(e),t(!0)}),(i=>{console.log('AudioPlayer._unlockAudio:',i),clearTimeout(e),t(!1)}))}else t(!1)}else t(!1)}unlockAudio(){this._unlockAudio((t=>{this._onAudioUnlock()}))}isUnlockAudio(){return!(!this.mAudioContext||'running'!==this.mAudioContext.state)}setAudioFormat(t){return t!==x&&t!==F?(this.error('setAudioFormat','kein gueltiges Audioformat uebergeben: '+t),-1):(this.mAudioFormat=t,0)}getAudioFormat(){return this.mAudioFormat}isLoad(){return this.mAudioLoadFlag}isPlay(){return this.mAudioPlayFlag}isCancel(){const t=this.mAudioCancelFlag;return this.mAudioCancelFlag=!1,t}_cancel(){this.isLoad()&&(this.mAudioCancelFlag=!0)}_loadAudioFile(t){if(!this.mXMLHttpRequestClass)return this.error('_loadAudioFile','keine XMLHttpRequest Klasse'),-1;try{this.mAudioLoadFlag=!0,this.mRequest=new this.mXMLHttpRequestClass,this.mRequest.open('GET',t,!0),this.mRequest.responseType='arraybuffer';const e=this.mRequest;return this.mRequest.onload=()=>{},this.mRequest.onloadend=()=>{if(404===e.status)return this.mAudioLoadFlag=!1,this.error('_requestDialogFile','Error 404'),void this._onAudioStop();200===e.status&&this._decodeAudio()},this.mRequest.onerror=t=>{this.mAudioLoadFlag=!1,this._onError(t),this._onAudioStop()},this.mRequest.onabord=t=>{this.mAudioLoadFlag=!1,this._onAudioStop()},this.mRequest.send(),0}catch(t){return this.exception('_loadAudioFile',t),this.mAudioLoadFlag=!1,this._onAudioStop(),-1}}_decodeAudio(){if(!this.isInit())return this.error('_decodeAudio','nicht initialisiert'),-1;if(this.isCancel())return this.mAudioLoadFlag=!1,0;if(!this.mAudioContext)return this.error('_decodeAudio','kein AudioContext vorhanden'),-1;try{return this.mAudioContext.decodeAudioData(this.mRequest.response,(t=>{this.mAudioBuffer=t;try{this._playStart()}catch(t){console.log('AudioPlayer._decodeAudio: Exception',t)}}),(t=>{this.error('_decodeAudio','DOMException '+t),this.mAudioLoadFlag=!1,this._onAudioStop()})),0}catch(t){return this.exception('_decodeAudio',t),this.mAudioLoadFlag=!1,this._onAudioStop(),-1}}_playStart(){if(!this.mAudioBuffer)return-1;if(this.isCancel())return this.mAudioLoadFlag=!1,0;if(!this.mAudioContext)return this.error('_playStart','kein AudioContext vorhanden'),-1;try{return this.mAudioPlayFlag=!0,this.mAudioLoadFlag=!1,this.mAudioCancelFlag=!1,this.mSource=this.mAudioContext.createBufferSource(),this.mSource.onended=()=>{this.isPlay()&&(this.mAudioPlayFlag=!1,this._onAudioStop())},this.mSource.buffer=this.mAudioBuffer,this.mSource.connect(this.mAudioContext.destination),this.mSource.start?this.mSource.start(0):this.mSource.noteOn(0),this._onAudioStart(),0}catch(t){return this.exception('_playStart',t),this.mAudioPlayFlag=!1,-1}}playPcmData(t){if(!this.isActive())return this.isErrorOutput()&&console.log('AudioPlayer.playPcmData: AudioPlayer ist nicht aktiv'),0;(this.isLoad()||this.isPlay())&&(this._cancel(),this.stop());try{return this.mSource=null,this.mAudioBuffer=null,this._unlockAudio((e=>{if(e){const e=[],i=(new B).decodePCM(t);e.push(i);const o=i;let r=this._getAudioBufferFirst(o);if(r||(r=this._getAudioBufferSecond(o)),r||(r=this._getAudioBufferResample(o)),!r)return void this.error('playByStream','kein Audiobuffer erzeugt');this.mAudioBuffer=r,this._playStart()}else this.error('play','AudioContext ist nicht entsperrt'),this._onAudioStop()})),0}catch(t){return this.exception('play',t),-1}}play(t,e){if(!this.isActive())return this.isErrorOutput()&&console.log('AudioPlayer.play: AudioPlayer ist nicht aktiv'),0;(this.isLoad()||this.isPlay())&&(this._cancel(),this.stop());try{let i='./';t&&(i=t);const o=i+e+'.'+this.mAudioFormat;return this.mSource=null,this.mAudioBuffer=null,this._unlockAudio((t=>{t?this._loadAudioFile(o):(this.error('play','AudioContext ist nicht entsperrt'),this._onAudioStop())})),0}catch(t){return this.exception('play',t),-1}}playFile(t){if(!this.isActive())return this.isErrorOutput()&&console.log('AudioPlayer.playFile: AudioPlayer ist nicht aktiv'),0;if((this.isLoad()||this.isPlay())&&(this._cancel(),this.stop()),!t)return this.error('playFile','kein Dateiname uebergeben'),-1;try{return this.mSource=null,this.mAudioBuffer=null,this._unlockAudio((e=>{e?this._loadAudioFile(t):(this.error('playFile','AudioContext ist nicht entsperrt'),this._onAudioStop())})),0}catch(t){return this.exception('playFile',t),-1}}getPlayFunc(){return(t,e)=>this.play(t,e)}stop(){if(!this.isActive())return this.isErrorOutput()&&console.log('AudioPlayer.stop: AudioPlayer ist nicht aktiv'),0;if(this._cancel(),this.mSource){try{this.mAudioPlayFlag=!1,this.mSource.stop?this.mSource.stop(0):this.mSource.noteOff(0),this.mSource.disconnect(0)}catch(t){this.exception('stop',t)}this.mSource=null,this.mAudioBuffer=null,this.mAudioCancelFlag=!1,this._onAudioStop()}return this.mAudioLoadFlag=!1,0}getStopFunc(){return()=>this.stop()}_getAudioBufferFirst(t){let e=null;try{const i=new Float32Array(t.length);i.set(t),e=new AudioBuffer({length:i.length,numberOfChannels:1,sampleRate:P}),e.getChannelData(0).set(i)}catch(t){e=null,console.log('AudioPlayer._getAudioBufferFirst: Exception',t)}return e}_getAudioBufferSecond(t){let e=null;try{const i=new Float32Array(t.length);i.set(t),e=this.mAudioContext.createBuffer(1,i.length,P),e.getChannelData(0).set(i)}catch(t){e=null,console.log('AudioPlayer._getAudioBufferSecond: Exception',t)}return e}_getAudioBufferResample(t){let e=null;try{const i=new Float32Array(1.4*t.length);i.set(t);const o=new E(P,22500,1,i.length,void 0).resampler(i);e=this.mAudioContext.createBuffer(1,o.length,22500),e.getChannelData(0).set(o)}catch(t){e=null,console.log('AudioPlayer._getAudioBufferResample: Exception',t)}return e}}class v extends e.PluginFactory{constructor(){super('AudioPlayerFactory')}isMock(){return!1}getName(){return S}_newPlugin(t,e,i){return new R(C,i)}create(t="",e="",i=!0){const o=t||C,r=e||C;try{return this._newPlugin(o,r,i)}catch(t){return this.exception('create',t),null}}}const M=e.SPEECH_VERSION_NUMBER,w=e.SPEECH_VERSION_BUILD,k=e.SPEECH_VERSION_TYPE,b=M+'.'+w+' vom '+e.SPEECH_VERSION_DATE+' ('+k+')';class L{constructor(t){if(this.mAudioPlayer=null,0!==this._init(t))throw new Error('Audio nicht initialisiert')}_init(t){if(this.mAudioPlayer)return 0;try{const i=e.FactoryManager.get(S,v);return this.mAudioPlayer=e.PluginManager.get(C,C,i),this.mAudioPlayer?this.mAudioPlayer.isInit()||0===this.mAudioPlayer.init(t)?0:(console.log('Audio._init: AudioPlayer nicht initialisiert'),-1):(console.log('Audio._init: kein AudioPlayer erzeugt'),-1)}catch(t){return console.log('Audio._init: Exception ',t.message),-1}}getVersion(){return b}isErrorOutput(){return this.mAudioPlayer.isErrorOutput()}setErrorOutputOn(){this.mAudioPlayer.setErrorOutputOn()}setErrorOutputOff(){this.mAudioPlayer.setErrorOutputOff()}addInitEvent(t,e){return 0}addPlayerStartEvent(t,e){return this.mAudioPlayer.onAudioStart=e,0}addPlayerStopEvent(t,e){return this.mAudioPlayer.onAudioStop=e,0}addUnlockEvent(t,e){return this.mAudioPlayer.onAudioUnlock=e,0}addErrorEvent(t,e){return this.mAudioPlayer.onError=e,0}removeInitEvent(t){return 0}removePlayerStartEvent(t){return 0}removePlayerStopEvent(t){return 0}removeUnlockEvent(t){return 0}removeErrorEvent(t){return 0}removeAllEvent(t){return 0}unlockAudio(){return this.mAudioPlayer.unlockAudio()}isUnlockAudio(){return this.mAudioPlayer.isUnlockAudio()}getAudioFormatList(){return[x,F]}setAudioFormat(t){return this.mAudioPlayer.setAudioFormat(t)}getAudioFormat(){return this.mAudioPlayer.getAudioFormat()}play(t,e){return this.mAudioPlayer.play(t,e)}playFile(t){return this.mAudioPlayer.playFile(t)}playData(t){return this.mAudioPlayer.playPcmData(atob(t))}stopPlay(){return this.mAudioPlayer.stop()}stop(){return this.mAudioPlayer.stop()}}t.AUDIOCONTEXT_FACTORY_NAME=r,t.AUDIOCONTEXT_TYPE_NAME=n,t.AUDIOPLAYER_FACTORY_NAME=S,t.AUDIOPLAYER_MOCK_NAME='AudioPlayerMock',t.AUDIOPLAYER_PLUGIN_NAME=C,t.AUDIO_DEFAULT_FORMAT=_,t.AUDIO_MP3_FORMAT=x,t.AUDIO_PLUGIN_NAME='AudioPlugin',t.AUDIO_WAV_FORMAT=F,t.AudioBrowserPlayer=g,t.AudioBrowserRecorder=y,t.AudioCodec=A,t.AudioContextFactory=u,t.AudioContextManager=s,t.AudioFactory=class{constructor(){}static create(t,e){try{return new L(e)}catch(t){return console.log('AudioFactory.create: Exception',t),null}}},t.AudioHtml5Reader=a,t.AudioPlayerFactory=v,t.AudioResampler=f,t.PCM_L16CodecArray=c,t.USERMEDIA_FACTORY_NAME=h,t.USERMEDIA_TYPE_NAME=d,t.UserMediaFactory=l,Object.defineProperty(t,'__esModule',{value:!0})}));
